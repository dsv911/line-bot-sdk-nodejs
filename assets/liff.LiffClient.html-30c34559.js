import{_ as o,r as a,o as r,c as f,a as e,d as l,w as n,b as t,e as d}from"./app-8ce1b1ae.js";const h={},c=e("h1",{id:"class-liffclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-liffclient","aria-hidden":"true"},"#"),t(" Class: LiffClient")],-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),u=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),_=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),b=d('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new LiffClient</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>httpClientConfig</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),m={href:"https://github.com/line/line-bot-sdk-nodejs/blob/29cb4d3/lib/liff/api/liffClient.ts#L39",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),x=e("h3",{id:"addliffapp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#addliffapp","aria-hidden":"true"},"#"),t(" addLIFFApp")],-1),L=e("strong",null,"addLIFFApp",-1),F=e("code",null,"addLiffAppRequest",-1),y=e("code",null,"Promise",-1),A=e("code",null,"AddLiffAppResponse",-1),I=e("p",null,"Adding the LIFF app to a channel",-1),C=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),k=e("td",{style:{"text-align":"left"}},[e("code",null,"addLiffAppRequest")],-1),D={style:{"text-align":"left"}},P=e("code",null,"AddLiffAppRequest",-1),v=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),q=e("code",null,"Promise",-1),N=e("code",null,"AddLiffAppResponse",-1),B=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),S=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/liff-server/#add-liff-app"}," Documentation")],-1),M=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),T={href:"https://github.com/line/line-bot-sdk-nodejs/blob/29cb4d3/lib/liff/api/liffClient.ts#L70",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),G=e("h3",{id:"deleteliffapp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deleteliffapp","aria-hidden":"true"},"#"),t(" deleteLIFFApp")],-1),z=e("strong",null,"deleteLIFFApp",-1),E=e("code",null,"liffId",-1),V=e("code",null,"Promise",-1),w=e("code",null,"MessageAPIResponseBase",-1),U=d('<p>Deletes a LIFF app from a channel.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>liffId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">ID of the LIFF app to be updated</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),H=e("code",null,"Promise",-1),J=e("code",null,"MessageAPIResponseBase",-1),K=e("p",null,[e("strong",null,[e("code",null,"Summary")])],-1),O=e("p",null,"Delete LIFF app from a channel",-1),Q=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),W=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/liff-server/#delete-liff-app"},"Delete LIFF app from a channel Documentation")],-1),X=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y={href:"https://github.com/line/line-bot-sdk-nodejs/blob/29cb4d3/lib/liff/api/liffClient.ts#L88",target:"_blank",rel:"noopener noreferrer"},Z=e("hr",null,null,-1),$=e("h3",{id:"getallliffapps",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getallliffapps","aria-hidden":"true"},"#"),t(" getAllLIFFApps")],-1),ee=e("strong",null,"getAllLIFFApps",-1),te=e("code",null,"Promise",-1),le=e("code",null,"GetAllLiffAppsResponse",-1),se=e("p",null,"Gets information on all the LIFF apps added to the channel.",-1),ne=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),ie=e("code",null,"Promise",-1),ae=e("code",null,"GetAllLiffAppsResponse",-1),de=e("p",null,[e("strong",null,[e("code",null,"Summary")])],-1),oe=e("p",null,"Get all LIFF apps",-1),re=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),fe=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/liff-server/#get-all-liff-apps"},"Get all LIFF apps Documentation")],-1),he=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),ce={href:"https://github.com/line/line-bot-sdk-nodejs/blob/29cb4d3/lib/liff/api/liffClient.ts#L102",target:"_blank",rel:"noopener noreferrer"},pe=e("hr",null,null,-1),ue=e("h3",{id:"updateliffapp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#updateliffapp","aria-hidden":"true"},"#"),t(" updateLIFFApp")],-1),_e=e("strong",null,"updateLIFFApp",-1),be=e("code",null,"liffId",-1),me=e("code",null,"updateLiffAppRequest",-1),ge=e("code",null,"Promise",-1),xe=e("code",null,"MessageAPIResponseBase",-1),Le=e("p",null,"Update LIFF app settings",-1),Fe=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),ye=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"liffId")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"ID of the LIFF app to be updated")],-1),Ie=e("td",{style:{"text-align":"left"}},[e("code",null,"updateLiffAppRequest")],-1),Ce={style:{"text-align":"left"}},Re=e("code",null,"UpdateLiffAppRequest",-1),ke=e("td",{style:{"text-align":"left"}},null,-1),De=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),Pe=e("code",null,"Promise",-1),ve=e("code",null,"MessageAPIResponseBase",-1),qe=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Ne=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/liff-server/#update-liff-app"}," Documentation")],-1),Be=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Se={href:"https://github.com/line/line-bot-sdk-nodejs/blob/29cb4d3/lib/liff/api/liffClient.ts#L113",target:"_blank",rel:"noopener noreferrer"};function Me(Te,je){const s=a("RouterLink"),i=a("ExternalLinkIcon");return r(),f("div",null,[e("p",null,[l(s,{to:"/apidocs/"},{default:n(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),l(s,{to:"/apidocs/modules.html"},{default:n(()=>[t("Exports")]),_:1}),t(" / "),l(s,{to:"/apidocs/modules/liff.html"},{default:n(()=>[t("liff")]),_:1}),t(" / LiffClient")]),c,e("p",null,[l(s,{to:"/apidocs/modules/liff.html"},{default:n(()=>[t("liff")]),_:1}),t(".LiffClient")]),p,u,e("ul",null,[e("li",null,[l(s,{to:"/apidocs/classes/liff.LiffClient.html#constructor"},{default:n(()=>[t("constructor")]),_:1})])]),_,e("ul",null,[e("li",null,[l(s,{to:"/apidocs/classes/liff.LiffClient.html#addliffapp"},{default:n(()=>[t("addLIFFApp")]),_:1})]),e("li",null,[l(s,{to:"/apidocs/classes/liff.LiffClient.html#deleteliffapp"},{default:n(()=>[t("deleteLIFFApp")]),_:1})]),e("li",null,[l(s,{to:"/apidocs/classes/liff.LiffClient.html#getallliffapps"},{default:n(()=>[t("getAllLIFFApps")]),_:1})]),e("li",null,[l(s,{to:"/apidocs/classes/liff.LiffClient.html#updateliffapp"},{default:n(()=>[t("updateLIFFApp")]),_:1})])]),b,e("p",null,[e("a",m,[t("lib/liff/api/liffClient.ts:39"),l(i)])]),g,x,e("p",null,[t("▸ "),L,t("("),F,t("): "),y,t("<"),l(s,{to:"/apidocs/modules/liff.html#addliffappresponse"},{default:n(()=>[A]),_:1}),t(">")]),I,C,e("table",null,[R,e("tbody",null,[e("tr",null,[k,e("td",D,[l(s,{to:"/apidocs/modules/liff.html#addliffapprequest"},{default:n(()=>[P]),_:1})])])])]),v,e("p",null,[q,t("<"),l(s,{to:"/apidocs/modules/liff.html#addliffappresponse"},{default:n(()=>[N]),_:1}),t(">")]),B,S,M,e("p",null,[e("a",T,[t("lib/liff/api/liffClient.ts:70"),l(i)])]),j,G,e("p",null,[t("▸ "),z,t("("),E,t("): "),V,t("<"),l(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:n(()=>[w]),_:1}),t(">")]),U,e("p",null,[H,t("<"),l(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:n(()=>[J]),_:1}),t(">")]),K,O,Q,W,X,e("p",null,[e("a",Y,[t("lib/liff/api/liffClient.ts:88"),l(i)])]),Z,$,e("p",null,[t("▸ "),ee,t("(): "),te,t("<"),l(s,{to:"/apidocs/modules/liff.html#getallliffappsresponse"},{default:n(()=>[le]),_:1}),t(">")]),se,ne,e("p",null,[ie,t("<"),l(s,{to:"/apidocs/modules/liff.html#getallliffappsresponse"},{default:n(()=>[ae]),_:1}),t(">")]),de,oe,re,fe,he,e("p",null,[e("a",ce,[t("lib/liff/api/liffClient.ts:102"),l(i)])]),pe,ue,e("p",null,[t("▸ "),_e,t("("),be,t(", "),me,t("): "),ge,t("<"),l(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:n(()=>[xe]),_:1}),t(">")]),Le,Fe,e("table",null,[ye,e("tbody",null,[Ae,e("tr",null,[Ie,e("td",Ce,[l(s,{to:"/apidocs/modules/liff.html#updateliffapprequest"},{default:n(()=>[Re]),_:1})]),ke])])]),De,e("p",null,[Pe,t("<"),l(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:n(()=>[ve]),_:1}),t(">")]),qe,Ne,Be,e("p",null,[e("a",Se,[t("lib/liff/api/liffClient.ts:113"),l(i)])])])}const ze=o(h,[["render",Me],["__file","liff.LiffClient.html.vue"]]);export{ze as default};
