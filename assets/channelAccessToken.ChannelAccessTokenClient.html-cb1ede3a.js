import{_ as d,r as c,o as i,c as h,a as e,d as n,w as l,b as t,e as o}from"./app-dd7fc637.js";const r={},u=e("h1",{id:"class-channelaccesstokenclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-channelaccesstokenclient","aria-hidden":"true"},"#"),t(" Class: ChannelAccessTokenClient")],-1),_=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),p=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),k=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>â€¢ <strong>new ChannelAccessTokenClient</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>httpClientConfig</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),y={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L40",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),b=e("h3",{id:"getsallvalidchannelaccesstokenkeyids",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getsallvalidchannelaccesstokenkeyids","aria-hidden":"true"},"#"),t(" getsAllValidChannelAccessTokenKeyIds")],-1),m=e("strong",null,"getsAllValidChannelAccessTokenKeyIds",-1),T=e("code",null,"clientAssertionType",-1),x=e("code",null,"clientAssertion",-1),C=e("code",null,"Promise",-1),A=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),v=o('<p>Gets all valid channel access token key IDs.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientAssertionType</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">`urn:ietf:params:oauth:client-assertion-type:jwt-bearer`</td></tr><tr><td style="text-align:left;"><code>clientAssertion</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token (JWT) (opens new window)the client needs to create and sign with the private key.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),I=e("code",null,"Promise",-1),D=e("code",null,"ChannelAccessTokenKeyIdsResponse",-1),P=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),R=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1"}," Documentation")],-1),w=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),S={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L72",target:"_blank",rel:"noopener noreferrer"},j=e("hr",null,null,-1),B=e("h3",{id:"issuechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltoken","aria-hidden":"true"},"#"),t(" issueChannelToken")],-1),L=e("strong",null,"issueChannelToken",-1),N=e("code",null,"grantType?",-1),J=e("code",null,"clientId?",-1),W=e("code",null,"clientSecret?",-1),V=e("code",null,"Promise",-1),z=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),K=o('<p>Issue short-lived channel access token</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">`client_credentials`</td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),M=e("code",null,"Promise",-1),E=e("code",null,"IssueShortLivedChannelAccessTokenResponse",-1),O=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),G=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token"}," Documentation")],-1),U=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L96",target:"_blank",rel:"noopener noreferrer"},q=e("hr",null,null,-1),F=e("h3",{id:"issuechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" issueChannelTokenByJWT")],-1),H=e("strong",null,"issueChannelTokenByJWT",-1),Q=e("code",null,"grantType?",-1),X=e("code",null,"clientAssertionType?",-1),Z=e("code",null,"clientAssertion?",-1),$=e("code",null,"Promise",-1),ee=e("code",null,"IssueChannelAccessTokenResponse",-1),te=o('<p>Issues a channel access token that allows you to specify a desired expiration date. This method lets you use JWT assertion for authentication.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">client_credentials</td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">urn:ietf:params:oauth:client-assertion-type:jwt-bearer</td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4>',4),ne=e("code",null,"Promise",-1),se=e("code",null,"IssueChannelAccessTokenResponse",-1),le=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),ae=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1"}," Documentation")],-1),oe=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),ce={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L123",target:"_blank",rel:"noopener noreferrer"},de=e("hr",null,null,-1),ie=e("h3",{id:"issuestatelesschanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#issuestatelesschanneltoken","aria-hidden":"true"},"#"),t(" issueStatelessChannelToken")],-1),he=e("strong",null,"issueStatelessChannelToken",-1),re=e("code",null,"grantType?",-1),ue=e("code",null,"clientAssertionType?",-1),_e=e("code",null,"clientAssertion?",-1),fe=e("code",null,"clientId?",-1),pe=e("code",null,"clientSecret?",-1),ke=e("code",null,"Promise",-1),ye=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),ge=o('<p>Issues a new stateless channel access token, which doesn&#39;t have max active token limit unlike the other token types. The newly issued token is only valid for 15 minutes but can not be revoked until it naturally expires.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>grantType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">`client_credentials`</td></tr><tr><td style="text-align:left;"><code>clientAssertionType?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">URL-encoded value of `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`</td></tr><tr><td style="text-align:left;"><code>clientAssertion?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A JSON Web Token the client needs to create and sign with the private key of the Assertion Signing Key.</td></tr><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID.</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel secret.</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4>',4),be=e("code",null,"Promise",-1),me=e("code",null,"IssueStatelessChannelAccessTokenResponse",-1),Te=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),xe=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token"}," Documentation")],-1),Ce=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ae={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L151",target:"_blank",rel:"noopener noreferrer"},ve=e("hr",null,null,-1),Ie=e("h3",{id:"revokechanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltoken","aria-hidden":"true"},"#"),t(" revokeChannelToken")],-1),De=e("strong",null,"revokeChannelToken",-1),Pe=e("code",null,"accessToken?",-1),Re=e("code",null,"Promise",-1),we=e("code",null,"MessageAPIResponseBase",-1),Se=o('<p>Revoke short-lived or long-lived channel access token</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4>',4),je=e("code",null,"Promise",-1),Be=e("code",null,"MessageAPIResponseBase",-1),Le=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Ne=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-longlived-or-shortlived-channel-access-token"}," Documentation")],-1),Je=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),We={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L180",target:"_blank",rel:"noopener noreferrer"},Ve=e("hr",null,null,-1),ze=e("h3",{id:"revokechanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#revokechanneltokenbyjwt","aria-hidden":"true"},"#"),t(" revokeChannelTokenByJWT")],-1),Ke=e("strong",null,"revokeChannelTokenByJWT",-1),Me=e("code",null,"clientId?",-1),Ee=e("code",null,"clientSecret?",-1),Oe=e("code",null,"accessToken?",-1),Ge=e("code",null,"Promise",-1),Ue=e("code",null,"MessageAPIResponseBase",-1),Ye=o('<p>Revoke channel access token v2.1</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clientId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel ID</td></tr><tr><td style="text-align:left;"><code>clientSecret?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel Secret</td></tr><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4>',4),qe=e("code",null,"Promise",-1),Fe=e("code",null,"MessageAPIResponseBase",-1),He=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),Qe=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#revoke-channel-access-token-v2-1"}," Documentation")],-1),Xe=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ze={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L202",target:"_blank",rel:"noopener noreferrer"},$e=e("hr",null,null,-1),et=e("h3",{id:"verifychanneltoken",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltoken","aria-hidden":"true"},"#"),t(" verifyChannelToken")],-1),tt=e("strong",null,"verifyChannelToken",-1),nt=e("code",null,"accessToken?",-1),st=e("code",null,"Promise",-1),lt=e("code",null,"VerifyChannelAccessTokenResponse",-1),at=o('<p>Verify the validity of short-lived and long-lived channel access tokens</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A short-lived or long-lived channel access token.</td></tr></tbody></table><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4>',4),ot=e("code",null,"Promise",-1),ct=e("code",null,"VerifyChannelAccessTokenResponse",-1),dt=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),it=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token"}," Documentation")],-1),ht=e("h4",{id:"defined-in-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-7","aria-hidden":"true"},"#"),t(" Defined in")],-1),rt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L226",target:"_blank",rel:"noopener noreferrer"},ut=e("hr",null,null,-1),_t=e("h3",{id:"verifychanneltokenbyjwt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#verifychanneltokenbyjwt","aria-hidden":"true"},"#"),t(" verifyChannelTokenByJWT")],-1),ft=e("strong",null,"verifyChannelTokenByJWT",-1),pt=e("code",null,"accessToken",-1),kt=e("code",null,"Promise",-1),yt=e("code",null,"VerifyChannelAccessTokenResponse",-1),gt=o('<p>You can verify whether a Channel access token with a user-specified expiration (Channel Access Token v2.1) is valid.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>accessToken</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Channel access token with a user-specified expiration (Channel Access Token v2.1).</td></tr></tbody></table><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4>',4),bt=e("code",null,"Promise",-1),mt=e("code",null,"VerifyChannelAccessTokenResponse",-1),Tt=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),xt=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#verfiy-channel-access-token-v2-1"}," Documentation")],-1),Ct=e("h4",{id:"defined-in-8",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-8","aria-hidden":"true"},"#"),t(" Defined in")],-1),At={href:"https://github.com/line/line-bot-sdk-nodejs/blob/4fd7d3a/lib/channel-access-token/api/channelAccessTokenClient.ts#L246",target:"_blank",rel:"noopener noreferrer"};function vt(It,Dt){const s=c("RouterLink"),a=c("ExternalLinkIcon");return i(),h("div",null,[e("p",null,[n(s,{to:"/apidocs/"},{default:l(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules.html"},{default:l(()=>[t("Exports")]),_:1}),t(" / "),n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(" / ChannelAccessTokenClient")]),u,e("p",null,[n(s,{to:"/apidocs/modules/channelAccessToken.html"},{default:l(()=>[t("channelAccessToken")]),_:1}),t(".ChannelAccessTokenClient")]),_,f,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#constructor"},{default:l(()=>[t("constructor")]),_:1})])]),p,e("ul",null,[e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#getsallvalidchannelaccesstokenkeyids"},{default:l(()=>[t("getsAllValidChannelAccessTokenKeyIds")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltoken"},{default:l(()=>[t("issueChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuechanneltokenbyjwt"},{default:l(()=>[t("issueChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#issuestatelesschanneltoken"},{default:l(()=>[t("issueStatelessChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltoken"},{default:l(()=>[t("revokeChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#revokechanneltokenbyjwt"},{default:l(()=>[t("revokeChannelTokenByJWT")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltoken"},{default:l(()=>[t("verifyChannelToken")]),_:1})]),e("li",null,[n(s,{to:"/apidocs/classes/channelAccessToken.ChannelAccessTokenClient.html#verifychanneltokenbyjwt"},{default:l(()=>[t("verifyChannelTokenByJWT")]),_:1})])]),k,e("p",null,[e("a",y,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:40"),n(a)])]),g,b,e("p",null,[t("â–¸ "),m,t("("),T,t(", "),x,t("): "),C,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[A]),_:1}),t(">")]),v,e("p",null,[I,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#channelaccesstokenkeyidsresponse"},{default:l(()=>[D]),_:1}),t(">")]),P,R,w,e("p",null,[e("a",S,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:72"),n(a)])]),j,B,e("p",null,[t("â–¸ "),L,t("("),N,t(", "),J,t(", "),W,t("): "),V,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[z]),_:1}),t(">")]),K,e("p",null,[M,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issueshortlivedchannelaccesstokenresponse"},{default:l(()=>[E]),_:1}),t(">")]),O,G,U,e("p",null,[e("a",Y,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:96"),n(a)])]),q,F,e("p",null,[t("â–¸ "),H,t("("),Q,t(", "),X,t(", "),Z,t("): "),$,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[ee]),_:1}),t(">")]),te,e("p",null,[ne,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuechannelaccesstokenresponse"},{default:l(()=>[se]),_:1}),t(">")]),le,ae,oe,e("p",null,[e("a",ce,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:123"),n(a)])]),de,ie,e("p",null,[t("â–¸ "),he,t("("),re,t(", "),ue,t(", "),_e,t(", "),fe,t(", "),pe,t("): "),ke,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[ye]),_:1}),t(">")]),ge,e("p",null,[be,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#issuestatelesschannelaccesstokenresponse"},{default:l(()=>[me]),_:1}),t(">")]),Te,xe,Ce,e("p",null,[e("a",Ae,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:151"),n(a)])]),ve,Ie,e("p",null,[t("â–¸ "),De,t("("),Pe,t("): "),Re,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[we]),_:1}),t(">")]),Se,e("p",null,[je,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Be]),_:1}),t(">")]),Le,Ne,Je,e("p",null,[e("a",We,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:180"),n(a)])]),Ve,ze,e("p",null,[t("â–¸ "),Ke,t("("),Me,t(", "),Ee,t(", "),Oe,t("): "),Ge,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Ue]),_:1}),t(">")]),Ye,e("p",null,[qe,t("<"),n(s,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:l(()=>[Fe]),_:1}),t(">")]),He,Qe,Xe,e("p",null,[e("a",Ze,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:202"),n(a)])]),$e,et,e("p",null,[t("â–¸ "),tt,t("("),nt,t("): "),st,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[lt]),_:1}),t(">")]),at,e("p",null,[ot,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[ct]),_:1}),t(">")]),dt,it,ht,e("p",null,[e("a",rt,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:226"),n(a)])]),ut,_t,e("p",null,[t("â–¸ "),ft,t("("),pt,t("): "),kt,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[yt]),_:1}),t(">")]),gt,e("p",null,[bt,t("<"),n(s,{to:"/apidocs/modules/channelAccessToken.html#verifychannelaccesstokenresponse"},{default:l(()=>[mt]),_:1}),t(">")]),Tt,xt,Ct,e("p",null,[e("a",At,[t("lib/channel-access-token/api/channelAccessTokenClient.ts:246"),n(a)])])])}const Rt=d(r,[["render",vt],["__file","channelAccessToken.ChannelAccessTokenClient.html.vue"]]);export{Rt as default};
