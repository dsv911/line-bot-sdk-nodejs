import{_ as r,r as p,o as c,c as l,a as n,b as s,d as a,w as i,e as t}from"./app-4d791797.js";const u={},d=n("h1",{id:"new-client-config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#new-client-config","aria-hidden":"true"},"#"),s(),n("code",null,"new Client(config)")],-1),k=n("code",null,"Client",-1),m={href:"https://developers.line.biz/en/reference/messaging-api/",target:"_blank",rel:"noopener noreferrer"},g=t(`<h4 id="type-signature" tabindex="-1"><a class="header-anchor" href="#type-signature" aria-hidden="true">#</a> Type signature</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> config<span class="token operator">:</span> ClientConfig

  <span class="token function">constructor</span><span class="token punctuation">(</span>config<span class="token operator">:</span> ClientConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment">// requestOption</span>
  <span class="token function">setRequestOptionOnce</span><span class="token punctuation">(</span>option<span class="token operator">:</span> Partial<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    retryKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>

  <span class="token comment">// Message</span>
  <span class="token function">pushMessage</span><span class="token punctuation">(</span>to<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> messages<span class="token operator">:</span> Message <span class="token operator">|</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> notificationDisabled<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">replyMessage</span><span class="token punctuation">(</span>replyToken<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> messages<span class="token operator">:</span> Message <span class="token operator">|</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> notificationDisabled<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">multicast</span><span class="token punctuation">(</span>to<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> messages<span class="token operator">:</span> Message <span class="token operator">|</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> notificationDisabled<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">narrowcast</span><span class="token punctuation">(</span>
    messages<span class="token operator">:</span> Message <span class="token operator">|</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    recipient<span class="token operator">?</span><span class="token operator">:</span> ReceieptObject<span class="token punctuation">,</span>
    filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> demographic<span class="token operator">:</span> DemographicFilterObject <span class="token punctuation">}</span><span class="token punctuation">,</span>
    limit<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> max<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> upToRemainingQuota<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    notificationDisabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">broadcast</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Message <span class="token operator">|</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> notificationDisabled<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">getMessageContent</span><span class="token punctuation">(</span>messageId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Readable<span class="token operator">&gt;</span>

  <span class="token comment">// Validate message objects</span>
  <span class="token function">validatePushMessageObjects</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Types<span class="token punctuation">.</span>Message <span class="token operator">|</span> Types<span class="token punctuation">.</span>Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">validateReplyMessageObjects</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Types<span class="token punctuation">.</span>Message <span class="token operator">|</span> Types<span class="token punctuation">.</span>Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">validateMulticastMessageObjects</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Types<span class="token punctuation">.</span>Message <span class="token operator">|</span> Types<span class="token punctuation">.</span>Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">validateNarrowcastMessageObjects</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Types<span class="token punctuation">.</span>Message <span class="token operator">|</span> Types<span class="token punctuation">.</span>Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>MessageAPIResponseBase<span class="token operator">&gt;</span>
  <span class="token function">validateBroadcastMessageObjects</span><span class="token punctuation">(</span>messages<span class="token operator">:</span> Types<span class="token punctuation">.</span>Message <span class="token operator">|</span> Types<span class="token punctuation">.</span>Message<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>MessageAPIResponseBase<span class="token operator">&gt;</span>

  <span class="token comment">// Profile</span>
  <span class="token function">getProfile</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Profile<span class="token operator">&gt;</span>

  <span class="token comment">// Group</span>
  <span class="token function">getGroupSummary</span><span class="token punctuation">(</span>groupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>GroupSummary<span class="token operator">&gt;</span>
  <span class="token function">getGroupMembersCount</span><span class="token punctuation">(</span>groupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MemberCountResponse<span class="token operator">&gt;</span>
  <span class="token function">getGroupMemberProfile</span><span class="token punctuation">(</span>groupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Profile<span class="token operator">&gt;</span>
  <span class="token function">getGroupMemberIds</span><span class="token punctuation">(</span>groupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token function">leaveGroup</span><span class="token punctuation">(</span>groupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

  <span class="token comment">// Room</span>
  <span class="token function">getRoomMembersCount</span><span class="token punctuation">(</span>roomId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>MemberCountResponse<span class="token operator">&gt;</span>
  <span class="token function">getRoomMemberProfile</span><span class="token punctuation">(</span>roomId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Profile<span class="token operator">&gt;</span>
  <span class="token function">getRoomMemberIds</span><span class="token punctuation">(</span>roomId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token function">leaveRoom</span><span class="token punctuation">(</span>roomId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

  <span class="token comment">// Rich menu</span>
  <span class="token function">getRichMenu</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RichMenuResponse<span class="token operator">&gt;</span>
  <span class="token function">createRichMenu</span><span class="token punctuation">(</span>richMenu<span class="token operator">:</span> RichMenu<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
  <span class="token function">deleteRichMenu</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">getRichMenuAliasList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>GetRichMenuAliasListResponse<span class="token operator">&gt;</span>
  <span class="token function">getRichMenuAlias</span><span class="token punctuation">(</span>richMenuAliasId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>GetRichMenuAliasResponse<span class="token operator">&gt;&gt;</span>
  <span class="token function">createRichMenuAlias</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> richMenuAliasId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">deleteRichMenuAlias</span><span class="token punctuation">(</span>richMenuAliasId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">updateRichMenuAlias</span><span class="token punctuation">(</span>richMenuAliasId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">getRichMenuIdOfUser</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
  <span class="token function">linkRichMenuToUser</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">unlinkRichMenuFromUser</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">linkRichMenuToMultipleUsers</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userIds<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">unlinkRichMenusFromMultipleUsers</span><span class="token punctuation">(</span>userIds<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">getRichMenuImage</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Readable<span class="token operator">&gt;</span>
  <span class="token function">setRichMenuImage</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> Buffer <span class="token operator">|</span> Readable<span class="token punctuation">,</span> contentType<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token function">getRichMenuList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Array</span><span class="token operator">&lt;</span>RichMenuResponse<span class="token operator">&gt;&gt;</span>
  <span class="token function">setDefaultRichMenu</span><span class="token punctuation">(</span>richMenuId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">getDefaultRichMenuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
  <span class="token function">deleteDefaultRichMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>

  <span class="token comment">// Account link</span>
  <span class="token function">getLinkToken</span><span class="token punctuation">(</span>userId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>

  <span class="token comment">// Get number of messages sent</span>
  <span class="token function">getNumberOfSentReplyMessages</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NumberOfMessagesSentResponse<span class="token operator">&gt;</span>
  <span class="token function">getNumberOfSentPushMessages</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NumberOfMessagesSentResponse<span class="token operator">&gt;</span>
  <span class="token function">getNumberOfSentMulticastMessages</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NumberOfMessagesSentResponse<span class="token operator">&gt;</span>
  <span class="token function">getTargetLimitForAdditionalMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TargetLimitForAdditionalMessages<span class="token operator">&gt;</span>
  <span class="token function">getNumberOfMessagesSentThisMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NumberOfMessagesSentThisMonth<span class="token operator">&gt;</span>
  <span class="token function">getNumberOfSentBroadcastMessages</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NumberOfMessagesSentResponse<span class="token operator">&gt;</span>
  <span class="token function">getNarrowcastProgress</span><span class="token punctuation">(</span>requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>NarrowcastProgressResponse<span class="token operator">&gt;</span>

  <span class="token comment">// Insight</span>
  <span class="token function">getNumberOfMessageDeliveries</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>NumberOfMessageDeliveriesResponse<span class="token operator">&gt;</span>
  <span class="token function">getNumberOfFollowers</span><span class="token punctuation">(</span>date<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>NumberOfFollowersResponse<span class="token operator">&gt;</span>
  <span class="token function">getFriendDemographics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>FriendDemographics<span class="token operator">&gt;</span>
  <span class="token function">getUserInteractionStatistics</span><span class="token punctuation">(</span>requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>UserInteractionStatistics<span class="token operator">&gt;</span>
  <span class="token function">getStatisticsPerUnit</span><span class="token punctuation">(</span>customAggregationUnit<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> from<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> to<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Types<span class="token punctuation">.</span>StatisticsPerUnit<span class="token operator">&gt;</span>

  <span class="token comment">// AudienceGroup</span>
  <span class="token function">createUploadAudienceGroup</span><span class="token punctuation">(</span>uploadAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    isIfaAudience<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    audiences<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    uploadDescription<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      created<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">createUploadAudienceGroupByFile</span><span class="token punctuation">(</span>uploadAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    isIfaAudience<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    uploadDescription<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    file<span class="token operator">:</span> Buffer <span class="token operator">|</span> Readable<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      type<span class="token operator">:</span> <span class="token string">&quot;UPLOAD&quot;</span><span class="token punctuation">;</span>
      description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      created<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">updateUploadAudienceGroup</span><span class="token punctuation">(</span>
    uploadAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      description<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      uploadDescription<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      audiences<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// for set request timeout</span>
    httpConfig<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>AxiosRequestConfig<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">createUploadAudienceGroupByFile</span><span class="token punctuation">(</span>
    uploadAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      uploadDescription<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      file<span class="token operator">:</span> Buffer <span class="token operator">|</span> Readable<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// for set request timeout</span>
    httpConfig<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>AxiosRequestConfig<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">createClickAudienceGroup</span><span class="token punctuation">(</span>clickAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    clickUrl<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      created<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      clickUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">createImpAudienceGroup</span><span class="token punctuation">(</span>impAudienceGroup<span class="token operator">:</span> <span class="token punctuation">{</span>
    requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      audienceGroupId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
      created<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      requestId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">setDescriptionAudienceGroup</span><span class="token punctuation">(</span>
    description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    audienceGroupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">deleteAudienceGroup</span><span class="token punctuation">(</span>audienceGroupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">getAudienceGroup</span><span class="token punctuation">(</span>audienceGroupId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>AudienceGroup<span class="token operator">&gt;</span>
  <span class="token function">getAudienceGroups</span><span class="token punctuation">(</span>
    page<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    description<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    status<span class="token operator">?</span><span class="token operator">:</span> AudienceGroupStatus<span class="token punctuation">,</span>
    size<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    createRoute<span class="token operator">?</span><span class="token operator">:</span> AudienceGroupCreateRoute<span class="token punctuation">,</span>
    includesExternalPublicGroups<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
      audienceGroups<span class="token operator">:</span> AudienceGroups<span class="token punctuation">;</span>
      hasNextPage<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
      totalCount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      readWriteAudienceGroupTotalCount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      page<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
      size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">getAudienceGroupAuthorityLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    authorityLevel<span class="token operator">:</span> Types<span class="token punctuation">.</span>AudienceGroupAuthorityLevel
  <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">changeAudienceGroupAuthorityLevel</span><span class="token punctuation">(</span>
    authorityLevel<span class="token operator">:</span> Types<span class="token punctuation">.</span>AudienceGroupAuthorityLevel
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>

  <span class="token comment">// Bot</span>
  <span class="token function">getBotInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>BotInfoResponse<span class="token operator">&gt;</span>

  <span class="token comment">// Webhook</span>
  <span class="token function">setWebhookEndpointUrl</span><span class="token punctuation">(</span>endpoint<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">getWebhookEndpointInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    endpoint<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    active<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span>
  <span class="token function">testWebhookEndpoint</span><span class="token punctuation">(</span>endpoint<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    success<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    timestamp<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    statusCode<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    reason<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    detail<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),h=n("code",null,"Message",-1),b={href:"https://developers.line.biz/en/reference/messaging-api/#message-objects",target:"_blank",rel:"noopener noreferrer"},v=t(`<p><code>ClientConfig</code> type is like below.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">ClientConfig</span> <span class="token punctuation">{</span>
  channelAccessToken<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  channelSecret<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="common-specifications" tabindex="-1"><a class="header-anchor" href="#common-specifications" aria-hidden="true">#</a> Common Specifications</h2>`,3),f={href:"https://developers.line.biz/en/reference/messaging-api/#retry-api-request",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"setRequestOptionOnce",-1),I=n("h2",{id:"methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),s(" Methods")],-1),M=n("code",null,"messages: messages: Message | Message[]",-1),P={href:"https://developers.line.biz/en/reference/messaging-api/#message-objects",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"Promise",-1),j=n("code",null,".catch()",-1),A=n("h3",{id:"message",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#message","aria-hidden":"true"},"#"),s(" Message")],-1),R=n("h4",{id:"pushmessage-to-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pushmessage-to-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase","aria-hidden":"true"},"#"),s(),n("code",null,"pushMessage(to: string, messages: Message | Message[], notificationDisabled: boolean = false): Promise<MessageAPIResponseBase>")],-1),x={href:"https://developers.line.biz/en/reference/messaging-api/#send-push-message",target:"_blank",rel:"noopener noreferrer"},T=t(`<p>The first argument is an ID of a receiver, and the second is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">pushMessage</span><span class="token punctuation">(</span><span class="token string">&#39;user_or_group_or_room_id&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="replymessage-replytoken-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#replymessage-replytoken-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>replyMessage(replyToken: string, messages: Message | Message[], notificationDisabled: boolean = false): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,3),w={href:"https://developers.line.biz/en/reference/messaging-api/#send-reply-message",target:"_blank",rel:"noopener noreferrer"},G={href:"https://developers.line.biz/en/reference/messaging-api/#webhook-event-objects",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"pushMessage()",-1),O=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">replyMessage</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>replyToken<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="multicast-to-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#multicast-to-string-messages-message-message-notificationdisabled-boolean-false-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>multicast(to: string[], messages: Message | Message[], notificationDisabled: boolean = false): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,2),N={href:"https://developers.line.biz/en/reference/messaging-api/#send-multicast-message",target:"_blank",rel:"noopener noreferrer"},z=t(`<p>The first argument is a list of receiver IDs, and the second is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">multicast</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;user_id_1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user_id_2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;room_id_1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="broadcast-messages-message-message-notificationdisabled-boolean-false-promise-any" tabindex="-1"><a class="header-anchor" href="#broadcast-messages-message-message-notificationdisabled-boolean-false-promise-any" aria-hidden="true">#</a> <code>broadcast(messages: Message | Message[], notificationDisabled: boolean = false): Promise&lt;any&gt;</code></h4><p>Sends push messages to multiple users at any time.</p>`,4),S={href:"https://developers.line.biz/en/docs/messaging-api/migrating-line-at/",target:"_blank",rel:"noopener noreferrer"},L=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getmessagecontent-messageid-string-promise-readable" tabindex="-1"><a class="header-anchor" href="#getmessagecontent-messageid-string-promise-readable" aria-hidden="true">#</a> <code>getMessageContent(messageId: string): Promise&lt;Readable&gt;</code></h4>`,2),C={href:"https://developers.line.biz/en/reference/messaging-api/#get-content",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,"The argument is an ID of media messages, such as image, video, and audio. The ID can be retrieved from a message object of a message event.",-1),U={href:"https://nodejs.org/dist/latest/docs/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"},F=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getMessageContent</span><span class="token punctuation">(</span><span class="token string">&#39;message_id&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="validate-message-objects" tabindex="-1"><a class="header-anchor" href="#validate-message-objects" aria-hidden="true">#</a> Validate message objects</h3><h4 id="validatepushmessageobjects-messages-message-message-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#validatepushmessageobjects-messages-message-message-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>validatePushMessageObjects(messages: Message | Message[]): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,3),E={href:"https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-push-message",target:"_blank",rel:"noopener noreferrer"},q=t(`<p>The argument is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">validatePushMessageObjects</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validatereplymessageobjects-messages-message-message-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#validatereplymessageobjects-messages-message-message-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>validateReplyMessageObjects(messages: Message | Message[]): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,3),W={href:"https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-reply-message",target:"_blank",rel:"noopener noreferrer"},V=t(`<p>The argument is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">validateReplyMessageObjects</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validatemulticastmessageobjects-messages-message-message-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#validatemulticastmessageobjects-messages-message-message-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>validateMulticastMessageObjects(messages: Message | Message[]): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,3),Y={href:"https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-multicast-message",target:"_blank",rel:"noopener noreferrer"},H=t(`<p>The argument is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">validateMulticastMessageObjects</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validatenarrowcastmessageobjects-messages-message-message-promise-messageapiresponsebase" tabindex="-1"><a class="header-anchor" href="#validatenarrowcastmessageobjects-messages-message-message-promise-messageapiresponsebase" aria-hidden="true">#</a> <code>validateNarrowcastMessageObjects(messages: Message | Message[]): Promise&lt;MessageAPIResponseBase&gt;</code></h4>`,3),K={href:"https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-narrowcast-message",target:"_blank",rel:"noopener noreferrer"},Q=t(`<p>The argument is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">validateNarrowcastMessageObjects</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="validatebroadcastmessageobjects-messages-message-message-notificationdisabled-boolean-false-promise-any" tabindex="-1"><a class="header-anchor" href="#validatebroadcastmessageobjects-messages-message-message-notificationdisabled-boolean-false-promise-any" aria-hidden="true">#</a> <code>validateBroadcastMessageObjects(messages: Message | Message[], notificationDisabled: boolean = false): Promise&lt;any&gt;</code></h4>`,3),J={href:"https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-broadcast-message",target:"_blank",rel:"noopener noreferrer"},X=t(`<p>The argument is messages to be sent.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">validateBroadcastMessageObjects</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="profile" tabindex="-1"><a class="header-anchor" href="#profile" aria-hidden="true">#</a> Profile</h3><h4 id="getprofile-userid-string-promise-profile" tabindex="-1"><a class="header-anchor" href="#getprofile-userid-string-promise-profile" aria-hidden="true">#</a> <code>getProfile(userId: string): Promise&lt;Profile&gt;</code></h4>`,4),Z={href:"https://developers.line.biz/en/reference/messaging-api/#get-profile",target:"_blank",rel:"noopener noreferrer"},$=t(`<p>The argument is a user ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getProfile</span><span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">profile</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>profile<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> Group</h3><h4 id="getgroupsummary-groupid-string-promise-groupsummary" tabindex="-1"><a class="header-anchor" href="#getgroupsummary-groupid-string-promise-groupsummary" aria-hidden="true">#</a> <code>getGroupSummary(groupId: string): Promise&lt;GroupSummary&gt;</code></h4>`,4),ss={href:"https://developers.line.biz/en/reference/messaging-api/#get-group-summary",target:"_blank",rel:"noopener noreferrer"},ns=t(`<p>The argument is a group ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getGroupSummary</span><span class="token punctuation">(</span><span class="token string">&#39;group_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">summary</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>summary<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getgroupmemberscount-groupid-string-promise-membercountresponse" tabindex="-1"><a class="header-anchor" href="#getgroupmemberscount-groupid-string-promise-membercountresponse" aria-hidden="true">#</a> <code>getGroupMembersCount(groupId: string): Promise&lt;MemberCountResponse&gt;</code></h4>`,3),as={href:"https://developers.line.biz/en/reference/messaging-api/#get-members-group-count",target:"_blank",rel:"noopener noreferrer"},es=t(`<p>The argument is a group ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getGroupMembersCount</span><span class="token punctuation">(</span><span class="token string">&#39;group_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getgroupmemberprofile-groupid-string-userid-string-promise-profile" tabindex="-1"><a class="header-anchor" href="#getgroupmemberprofile-groupid-string-userid-string-promise-profile" aria-hidden="true">#</a> <code>getGroupMemberProfile(groupId: string, userId: string): Promise&lt;Profile&gt;</code></h4>`,3),ts={href:"https://developers.line.biz/en/reference/messaging-api/#get-group-member-profile",target:"_blank",rel:"noopener noreferrer"},os=t(`<p>The arguments are a group ID and an ID of a user in the group. Please refer to the official documentation for the difference between this API and <code>getProfile()</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getGroupMemberProfile</span><span class="token punctuation">(</span><span class="token string">&#39;group_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">profile</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>profile<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getgroupmemberids-groupid-string-promise-string" tabindex="-1"><a class="header-anchor" href="#getgroupmemberids-groupid-string-promise-string" aria-hidden="true">#</a> <code>getGroupMemberIds(groupId: string): Promise&lt;string[]&gt;</code></h4>`,3),ps={href:"https://developers.line.biz/en/reference/messaging-api/#get-group-member-user-ids",target:"_blank",rel:"noopener noreferrer"},is=t(`<p><em>FYI: This feature is only available for LINE@ Approved accounts or official accounts.</em></p><p>The argument is a group ID and the method returns a promise of an array of user IDs.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getGroupMemberIds</span><span class="token punctuation">(</span><span class="token string">&#39;group_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ids</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ids<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getbotfollowersids-promise-string" tabindex="-1"><a class="header-anchor" href="#getbotfollowersids-promise-string" aria-hidden="true">#</a> <code>getBotFollowersIds(): Promise&lt;string[]&gt;</code></h4>`,4),rs={href:"https://developers.line.biz/en/reference/messaging-api/#get-follower-ids",target:"_blank",rel:"noopener noreferrer"},cs=t(`<p><em>FYI: This feature is available only for verified or premium accounts.</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getBotFollowersIds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ids</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ids<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="leavegroup-groupid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#leavegroup-groupid-string-promise-any" aria-hidden="true">#</a> <code>leaveGroup(groupId: string): Promise&lt;any&gt;</code></h4>`,3),ls={href:"https://developers.line.biz/en/reference/messaging-api/#leave-group",target:"_blank",rel:"noopener noreferrer"},us=t(`<p>The argument is a group ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">leaveGroup</span><span class="token punctuation">(</span><span class="token string">&#39;group_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="room" tabindex="-1"><a class="header-anchor" href="#room" aria-hidden="true">#</a> Room</h3><h4 id="getroommemberscount-roomid-string-promise-memberscountresponse" tabindex="-1"><a class="header-anchor" href="#getroommemberscount-roomid-string-promise-memberscountresponse" aria-hidden="true">#</a> <code>getRoomMembersCount(roomId: string): Promise&lt;MembersCountResponse&gt;</code></h4>`,4),ds={href:"https://developers.line.biz/en/reference/messaging-api/#get-members-room-count",target:"_blank",rel:"noopener noreferrer"},ks=t(`<p>The argument is a room ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRoomMembersCount</span><span class="token punctuation">(</span><span class="token string">&#39;room_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getroommemberprofile-roomid-string-userid-string-promise-profile" tabindex="-1"><a class="header-anchor" href="#getroommemberprofile-roomid-string-userid-string-promise-profile" aria-hidden="true">#</a> <code>getRoomMemberProfile(roomId: string, userId: string): Promise&lt;Profile&gt;</code></h4>`,3),ms={href:"https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile",target:"_blank",rel:"noopener noreferrer"},gs=t(`<p>The arguments are a room ID and an ID of a user in the room. Please refer to the official documentation for the difference between this API and <code>getProfile()</code>.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRoomMemberProfile</span><span class="token punctuation">(</span><span class="token string">&#39;room_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">profile</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>profile<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getroommemberids-roomid-string-promise-string" tabindex="-1"><a class="header-anchor" href="#getroommemberids-roomid-string-promise-string" aria-hidden="true">#</a> <code>getRoomMemberIds(roomId: string): Promise&lt;string[]&gt;</code></h4>`,3),hs={href:"https://developers.line.biz/en/reference/messaging-api/#get-room-member-user-ids",target:"_blank",rel:"noopener noreferrer"},bs=t(`<p><em>FYI: This feature is only available for LINE@ Approved accounts or official accounts.</em></p><p>The argument is a room ID and the method returns a promise of an array of user IDs.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRoomMemberIds</span><span class="token punctuation">(</span><span class="token string">&#39;room_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ids</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ids<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="leaveroom-roomid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#leaveroom-roomid-string-promise-any" aria-hidden="true">#</a> <code>leaveRoom(roomId: string): Promise&lt;any&gt;</code></h4>`,4),vs={href:"https://developers.line.biz/en/reference/messaging-api/#leave-room",target:"_blank",rel:"noopener noreferrer"},fs=t(`<p>The argument is a room ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">leaveGroup</span><span class="token punctuation">(</span><span class="token string">&#39;room_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rich-menu" tabindex="-1"><a class="header-anchor" href="#rich-menu" aria-hidden="true">#</a> Rich menu</h3><h4 id="getrichmenu-richmenuid-string-promise-richmenuresponse" tabindex="-1"><a class="header-anchor" href="#getrichmenu-richmenuid-string-promise-richmenuresponse" aria-hidden="true">#</a> <code>getRichMenu(richMenuId: string): Promise&lt;RichMenuResponse&gt;</code></h4>`,4),_s={href:"https://developers.line.biz/en/reference/messaging-api/#get-rich-menu",target:"_blank",rel:"noopener noreferrer"},Is={href:"https://developers.line.biz/en/reference/messaging-api/#rich-menu-response-object",target:"_blank",rel:"noopener noreferrer"},Ms=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRichMenu</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">richMenu</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>richMenu<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>richMenu<span class="token punctuation">.</span>areas<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="createrichmenu-richmenu-richmenu-promise-string" tabindex="-1"><a class="header-anchor" href="#createrichmenu-richmenu-richmenu-promise-string" aria-hidden="true">#</a> <code>createRichMenu(richMenu: RichMenu): Promise&lt;string&gt;</code></h4>`,2),Ps={href:"https://developers.line.biz/en/reference/messaging-api/#create-rich-menu",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://developers.line.biz/en/reference/messaging-api/#rich-menu-object",target:"_blank",rel:"noopener noreferrer"},js=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">createRichMenu</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2500</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1686</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">richMenuId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>richMenuId<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="deleterichmenu-richmenuid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#deleterichmenu-richmenuid-string-promise-any" aria-hidden="true">#</a> <code>deleteRichMenu(richMenuId: string): Promise&lt;any&gt;</code></h4>`,2),As={href:"https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu",target:"_blank",rel:"noopener noreferrer"},Rs=t(`<p>The argument is a rich menu ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">deleteRichMenu</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="getrichmenualiaslist-promise-any" tabindex="-1"><a class="header-anchor" href="#getrichmenualiaslist-promise-any" aria-hidden="true">#</a> <code>getRichMenuAliasList(): Promise&lt;any&gt;</code></h4>`,3),xs={href:"https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-list",target:"_blank",rel:"noopener noreferrer"},Ts=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRichMenuAliasList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="getrichmenualias-richmenualiasid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#getrichmenualias-richmenualiasid-string-promise-any" aria-hidden="true">#</a> <code>getRichMenuAlias(richMenuAliasId: string): Promise&lt;any&gt;</code></h4>`,2),ws={href:"https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-by-id",target:"_blank",rel:"noopener noreferrer"},Gs=t(`<p>The argument is a rich menu alias ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRichMenuAlias</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_alias_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="createrichmenualias-richmenuid-string-richmenualiasid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#createrichmenualias-richmenuid-string-richmenualiasid-string-promise-any" aria-hidden="true">#</a> <code>createRichMenuAlias(richMenuId: string, richMenuAliasId: string): Promise&lt;any&gt;</code></h4>`,3),Ds={href:"https://developers.line.biz/en/reference/messaging-api/#create-rich-menu-alias",target:"_blank",rel:"noopener noreferrer"},Os=t(`<p>The argument is a rich menu ID and a rich menu alias ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">createRichMenuAlias</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rich_menu_alias_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="deleterichmenualias-richmenualiasid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#deleterichmenualias-richmenualiasid-string-promise-any" aria-hidden="true">#</a> <code>deleteRichMenuAlias(richMenuAliasId: string): Promise&lt;any&gt;</code></h4>`,3),Ns={href:"https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu-alias",target:"_blank",rel:"noopener noreferrer"},zs=t(`<p>The argument is a rich menu alias ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">deleteRichMenuAlias</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_alias_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="updaterichmenualias-richmenualiasid-string-richmenuid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#updaterichmenualias-richmenualiasid-string-richmenuid-string-promise-any" aria-hidden="true">#</a> <code>updateRichMenuAlias(richMenuAliasId: string, richMenuId: string): Promise&lt;any&gt;</code></h4>`,3),Ss={href:"https://developers.line.biz/en/reference/messaging-api/#update-rich-menu-alias",target:"_blank",rel:"noopener noreferrer"},Ls=t(`<p>The argument is a rich menu alias ID and a rich menu ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">updateRichMenuAlias</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_alias_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="getrichmenuidofuser-userid-string-promise-string" tabindex="-1"><a class="header-anchor" href="#getrichmenuidofuser-userid-string-promise-string" aria-hidden="true">#</a> <code>getRichMenuIdOfUser(userId: string): Promise&lt;string&gt;</code></h4>`,3),Cs={href:"https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-id-of-user",target:"_blank",rel:"noopener noreferrer"},Bs=t(`<p>The argument is a user ID. It returns a rich menu ID to be used with other APIs.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRichMenuIdOfUser</span><span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">richMenuId</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>richMenuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="linkrichmenutouser-userid-string-richmenuid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#linkrichmenutouser-userid-string-richmenuid-string-promise-any" aria-hidden="true">#</a> <code>linkRichMenuToUser(userId: string, richMenuId: string): Promise&lt;any&gt;</code></h4>`,3),Us={href:"https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-user",target:"_blank",rel:"noopener noreferrer"},Fs=t(`<p>The arguments are a user ID and a rich menu ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">linkRichMenuToUser</span><span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="unlinkrichmenufromuser-userid-string-richmenuid-string-promise-any" tabindex="-1"><a class="header-anchor" href="#unlinkrichmenufromuser-userid-string-richmenuid-string-promise-any" aria-hidden="true">#</a> <code>unlinkRichMenuFromUser(userId: string, richMenuId: string): Promise&lt;any&gt;</code></h4>`,3),Es={href:"https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-user",target:"_blank",rel:"noopener noreferrer"},qs=t(`<p>The arguments are a user ID and a rich menu ID.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">unlinkRichMenuFromUser</span><span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="linkrichmenutomultipleusers-richmenuid-string-userids-string-promise-any" tabindex="-1"><a class="header-anchor" href="#linkrichmenutomultipleusers-richmenuid-string-userids-string-promise-any" aria-hidden="true">#</a> <code>linkRichMenuToMultipleUsers(richMenuId: string, userIds: string[]): Promise&lt;any&gt;</code></h4><pre><code>It corresponds to the [Link rich menu to multiple users](https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-users) API.

The arguments are a richMenuId and a array of userIds.

\`\`\` js
client.linkRichMenuToMultipleUsers(&#39;rich_menu_id&#39;, [&#39;user_id&#39;])
\`\`\`
</code></pre><h4 id="unlinkrichmenusfrommultipleusers-userids-string-promise-any" tabindex="-1"><a class="header-anchor" href="#unlinkrichmenusfrommultipleusers-userids-string-promise-any" aria-hidden="true">#</a> <code>unlinkRichMenusFromMultipleUsers(userIds: string[]): Promise&lt;any&gt;</code></h4><pre><code>It corresponds to the [Unlink rich menus from multiple users](https://developers.line.biz/en/reference/messaging-api#unlink-rich-menu-from-users) API.

The argument is a array of userIds.

\`\`\` js
client.unlinkRichMenusFromMultipleUsers([&#39;user_id&#39;])
\`\`\`
</code></pre><h4 id="getrichmenuimage-richmenuid-string-promise-readable" tabindex="-1"><a class="header-anchor" href="#getrichmenuimage-richmenuid-string-promise-readable" aria-hidden="true">#</a> <code>getRichMenuImage(richMenuId: string): Promise&lt;Readable&gt;</code></h4>`,7),Ws={href:"https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image",target:"_blank",rel:"noopener noreferrer"},Vs=n("p",null,"The argument is a rich menu ID.",-1),Ys={href:"https://nodejs.org/dist/latest/docs/api/stream.html#stream_readable_streams",target:"_blank",rel:"noopener noreferrer"},Hs=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getRichMenuImage</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="setrichmenuimage-richmenuid-string-data-buffer-readable-contenttype-string-promise-any" tabindex="-1"><a class="header-anchor" href="#setrichmenuimage-richmenuid-string-data-buffer-readable-contenttype-string-promise-any" aria-hidden="true">#</a> <code>setRichMenuImage(richMenuId: string, data: Buffer | Readable, contentType?: string): Promise&lt;any&gt;</code></h4>`,2),Ks={href:"https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image",target:"_blank",rel:"noopener noreferrer"},Qs=t(`<p>The 1st argument is a rich menu ID. For 2nd argument, a buffer or a readable stream of an image should be provided. For the restriction of the image, please refer to the official documentation. The last argument is optional. If it&#39;s not provided, the mime type will be guessted from <code>data</code>. Only <code>image/jpeg</code> or <code>image/png</code> is allowed for the content type.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">setRichMenuImage</span><span class="token punctuation">(</span><span class="token string">&#39;rich_menu_id&#39;</span><span class="token punctuation">,</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./some_image.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="getrichmenulist-promise-array-richmenuresponse" tabindex="-1"><a class="header-anchor" href="#getrichmenulist-promise-array-richmenuresponse" aria-hidden="true">#</a> <code>getRichMenuList(): Promise&lt;Array&lt;RichMenuResponse&gt;&gt;</code></h4>`,3),Js={href:"https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-list",target:"_blank",rel:"noopener noreferrer"},Xs={href:"https://developers.line.biz/en/reference/messaging-api/#rich-menu-response-object",target:"_blank",rel:"noopener noreferrer"},Zs=n("h3",{id:"setdefaultrichmenu-richmenuid-string-promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setdefaultrichmenu-richmenuid-string-promise","aria-hidden":"true"},"#"),s(),n("code",null,"setDefaultRichMenu(richMenuId: string): Promise<{}>")],-1),$s={href:"https://developers.line.biz/en/reference/messaging-api/#set-default-rich-menu",target:"_blank",rel:"noopener noreferrer"},sn=n("h3",{id:"getdefaultrichmenuid-promise-string",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getdefaultrichmenuid-promise-string","aria-hidden":"true"},"#"),s(),n("code",null,"getDefaultRichMenuId(): Promise<string>")],-1),nn={href:"https://developers.line.biz/en/reference/messaging-api/#get-default-rich-menu-id",target:"_blank",rel:"noopener noreferrer"},an=n("h3",{id:"deletedefaultrichmenu-promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#deletedefaultrichmenu-promise","aria-hidden":"true"},"#"),s(),n("code",null,"deleteDefaultRichMenu(): Promise<{}>")],-1),en={href:"https://developers.line.biz/en/reference/messaging-api/#cancel-default-rich-menu",target:"_blank",rel:"noopener noreferrer"},tn=n("h3",{id:"account-link",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#account-link","aria-hidden":"true"},"#"),s(" Account link")],-1),on=n("h4",{id:"getlinktoken-userid-string-promise-string",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getlinktoken-userid-string-promise-string","aria-hidden":"true"},"#"),s(),n("code",null,"getLinkToken(userId: string): Promise<string>")],-1),pn=n("code",null,"/bot/user/{userId}/linkToken",-1),rn={href:"https://developers.line.biz/en/reference/messaging-api/#issue-link-token",target:"_blank",rel:"noopener noreferrer"},cn=t(`<p>If the request succeeds, a link token will be returned. Link tokens are valid for 10 minutes and can only be used once.</p><h3 id="get-number-of-messages-sent" tabindex="-1"><a class="header-anchor" href="#get-number-of-messages-sent" aria-hidden="true">#</a> Get number of messages sent</h3><h4 id="getnumberofsentreplymessages-date-string-promise-numberofmessagessentresponse" tabindex="-1"><a class="header-anchor" href="#getnumberofsentreplymessages-date-string-promise-numberofmessagessentresponse" aria-hidden="true">#</a> <code>getNumberOfSentReplyMessages(date: string): Promise&lt;NumberOfMessagesSentResponse&gt;</code></h4><p>Gets the number of messages sent with the <code>/bot/message/reply</code> endpoint.</p><p>The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getNumberOfSentReplyMessages</span><span class="token punctuation">(</span><span class="token string">&#39;20191231&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getnumberofsentpushmessages-date-string-promise-numberofmessagessentresponse" tabindex="-1"><a class="header-anchor" href="#getnumberofsentpushmessages-date-string-promise-numberofmessagessentresponse" aria-hidden="true">#</a> <code>getNumberOfSentPushMessages(date: string): Promise&lt;NumberOfMessagesSentResponse&gt;</code></h4><p>Gets the number of messages sent with the <code>/bot/message/push</code> endpoint.</p><p>The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getNumberOfSentPushMessages</span><span class="token punctuation">(</span><span class="token string">&#39;20191231&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getnumberofsentmulticastmessages-date-string-promise-numberofmessagessentresponse" tabindex="-1"><a class="header-anchor" href="#getnumberofsentmulticastmessages-date-string-promise-numberofmessagessentresponse" aria-hidden="true">#</a> <code>getNumberOfSentMulticastMessages(date: string): Promise&lt;NumberOfMessagesSentResponse&gt;</code></h4><p>Gets the number of messages sent with the <code>/bot/message/multicast</code> endpoint.</p><p>The number of messages retrieved by this operation does not include the number of messages sent from LINE@ Manager.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getNumberOfSentMulticastMessages</span><span class="token punctuation">(</span><span class="token string">&#39;20191231&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="gettargetlimitforadditionalmessages-promise-targetlimitforadditionalmessages" tabindex="-1"><a class="header-anchor" href="#gettargetlimitforadditionalmessages-promise-targetlimitforadditionalmessages" aria-hidden="true">#</a> <code>getTargetLimitForAdditionalMessages(): Promise&lt;TargetLimitForAdditionalMessages&gt;</code></h4><p>Gets the target limit for additional messages in the current month.</p><p>The number of messages retrieved by this operation includes the number of messages sent from LINE Official Account Manager.</p><p>Set a target limit with LINE Official Account Manager. For the procedures, refer to the LINE Official Account Manager manual.</p><p>Note: LINE@ accounts cannot call this API endpoint.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getTargetLimitForAdditionalMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getnumberofmessagessentthismonth-promise-numberofmessagessentthismonth" tabindex="-1"><a class="header-anchor" href="#getnumberofmessagessentthismonth-promise-numberofmessagessentthismonth" aria-hidden="true">#</a> <code>getNumberOfMessagesSentThisMonth(): Promise&lt;NumberOfMessagesSentThisMonth&gt;</code></h4><p>Gets the number of messages sent in the current month.</p><p>The number of messages retrieved by this operation includes the number of messages sent from LINE Official Account Manager.</p><p>The number of messages retrieved by this operation is approximate. To get the correct number of sent messages, use LINE Official Account Manager or execute API operations for getting the number of sent messages.</p><p>Note: LINE@ accounts cannot call this API endpoint.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getNumberOfMessagesSentThisMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="getnumberofsentbroadcastmessages-date-string-promise-numberofmessagessentresponse" tabindex="-1"><a class="header-anchor" href="#getnumberofsentbroadcastmessages-date-string-promise-numberofmessagessentresponse" aria-hidden="true">#</a> <code>getNumberOfSentBroadcastMessages(date: string): Promise&lt;NumberOfMessagesSentResponse&gt;</code></h4><p>Gets the number of messages sent with the <code>/bot/message/broadcast</code> endpoint.</p><p>The number of messages retrieved by this operation does not include the number of messages sent from LINE Official Account Manager.</p>`,29),ln={href:"https://developers.line.biz/en/docs/messaging-api/migrating-line-at/",target:"_blank",rel:"noopener noreferrer"},un=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>client<span class="token punctuation">.</span><span class="token function">getNumberOfSentBroadcastMessages</span><span class="token punctuation">(</span><span class="token string">&#39;20191231&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="insight" tabindex="-1"><a class="header-anchor" href="#insight" aria-hidden="true">#</a> Insight</h3><h4 id="getnumberofmessagedeliveries-date-string-promise-numberofmessagedeliveriesresponse" tabindex="-1"><a class="header-anchor" href="#getnumberofmessagedeliveries-date-string-promise-numberofmessagedeliveriesresponse" aria-hidden="true">#</a> <code>getNumberOfMessageDeliveries(date: string): Promise&lt;NumberOfMessageDeliveriesResponse&gt;</code></h4>`,3),dn={href:"https://developers.line.biz/en/reference/messaging-api/#get-number-of-delivery-messages",target:"_blank",rel:"noopener noreferrer"},kn=n("h4",{id:"getnumberoffollowers-date-string-promise-numberoffollowersresponse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getnumberoffollowers-date-string-promise-numberoffollowersresponse","aria-hidden":"true"},"#"),s(),n("code",null,"getNumberOfFollowers(date: string): Promise<NumberOfFollowersResponse>")],-1),mn={href:"https://developers.line.biz/en/reference/messaging-api/#get-number-of-followers",target:"_blank",rel:"noopener noreferrer"},gn=n("h4",{id:"getfrienddemographics-promise-types-frienddemographics",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getfrienddemographics-promise-types-frienddemographics","aria-hidden":"true"},"#"),s(),n("code",null,"getFriendDemographics(): Promise<Types.FriendDemographics>")],-1),hn={href:"https://developers.line.biz/en/reference/messaging-api/#get-demographic",target:"_blank",rel:"noopener noreferrer"},bn=n("h4",{id:"getuserinteractionstatistics-promise-types-userinteractionstatistics",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getuserinteractionstatistics-promise-types-userinteractionstatistics","aria-hidden":"true"},"#"),s(),n("code",null,"getUserInteractionStatistics(): Promise<Types.UserInteractionStatistics>")],-1),vn={href:"https://developers.line.biz/en/reference/messaging-api/#get-message-event",target:"_blank",rel:"noopener noreferrer"},fn=n("h4",{id:"getstatisticsperunit-promise-types-statisticsperunit",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getstatisticsperunit-promise-types-statisticsperunit","aria-hidden":"true"},"#"),s(),n("code",null,"getStatisticsPerUnit(): Promise<Types.StatisticsPerUnit>")],-1),_n={href:"https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit",target:"_blank",rel:"noopener noreferrer"},In=n("h3",{id:"bot",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bot","aria-hidden":"true"},"#"),s(" Bot")],-1),Mn=n("h4",{id:"getbotinfo-promise-botinforesponse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getbotinfo-promise-botinforesponse","aria-hidden":"true"},"#"),s(),n("code",null,"getBotInfo(): Promise<BotInfoResponse>")],-1),Pn={href:"https://developers.line.biz/en/reference/messaging-api/#get-bot-info",target:"_blank",rel:"noopener noreferrer"},yn=n("h3",{id:"webhook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webhook","aria-hidden":"true"},"#"),s(" Webhook")],-1),jn=n("h4",{id:"setwebhookendpointurl-endpoint-string-promise",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setwebhookendpointurl-endpoint-string-promise","aria-hidden":"true"},"#"),s(),n("code",null,"setWebhookEndpointUrl(endpoint: string): Promise<{}}>")],-1),An={href:"https://developers.line.biz/en/reference/messaging-api/#set-webhook-endpoint-url",target:"_blank",rel:"noopener noreferrer"},Rn=n("h4",{id:"getwebhookendpointinfo-promise-types-webhookendpointinforesponse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getwebhookendpointinfo-promise-types-webhookendpointinforesponse","aria-hidden":"true"},"#"),s(),n("code",null,"getWebhookEndpointInfo(): Promise<Types.WebhookEndpointInfoResponse>")],-1),xn={href:"https://developers.line.biz/en/reference/messaging-api/#get-webhook-endpoint-information",target:"_blank",rel:"noopener noreferrer"},Tn=n("h4",{id:"testwebhookendpoint-endpoint-string-promise-types-testwebhookendpointresponse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#testwebhookendpoint-endpoint-string-promise-types-testwebhookendpointresponse","aria-hidden":"true"},"#"),s(),n("code",null,"testWebhookEndpoint(endpoint?: string): Promise<Types.TestWebhookEndpointResponse>")],-1),wn={href:"https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint",target:"_blank",rel:"noopener noreferrer"};function Gn(Dn,On){const e=p("ExternalLinkIcon"),o=p("RouterLink");return c(),l("div",null,[d,n("p",null,[k,s(" is a class representing an API client. It provides methods corresponding to "),n("a",m,[s("messaging APIs"),a(e)]),s(".")]),g,n("p",null,[h,s(" is a valid message object. About message object structure, please refer to "),a(o,{to:"/api-reference/message-and-event-objects.html"},{default:i(()=>[s("Message and event objects")]),_:1}),s(" on this guide, or "),n("a",b,[s("Send message object"),a(e)]),s(" on the official documentation.")]),v,n("p",null,[s("Regarding to things like "),n("a",f,[s("Retrying an API request"),a(e)]),s(", there's an API called "),_,s(". When you call this first and call the API support that request option, then it will be set to that request and will be cleared automatically.")]),I,n("p",null,[s("For a parameter "),M,s(", you can provide a message object or an array of message objects. Both will work, but please beware that there can be a limit on the number of the messages to be sent simultaneously. About the API detail, please refer to "),n("a",P,[s("the official documentation"),a(e)]),s(".")]),n("p",null,[s("For functions returning "),y,s(", there will be errors thrown if something goes wrong, such as HTTP errors or parsing errors. You can catch them with the "),j,s(" method of the promises. The detailed error handling is explained in "),a(o,{to:"/guide/client.html"},{default:i(()=>[s("the Client guide")]),_:1}),s(".")]),A,R,n("p",null,[s("It corresponds to the "),n("a",x,[s("Push message"),a(e)]),s(" API.")]),T,n("p",null,[s("It corresponds to the "),n("a",w,[s("Reply message"),a(e)]),s(" API.")]),n("p",null,[s("The first argument is a reply token, which is retrieved from a webhook event object. For the list of replyable events, please refer to "),n("a",G,[s("Webhook event object"),a(e)]),s(" of the official documentation. The second argument is the same with one in "),D,s(".")]),O,n("p",null,[s("It corresponds to the "),n("a",N,[s("Multicast"),a(e)]),s(" API.")]),z,n("p",null,[s("Note: LINE@ accounts cannot call this API endpoint. Please migrate it to a LINE official account. For more information, see "),n("a",S,[s("Migration of LINE@ accounts"),a(e)]),s(".")]),L,n("p",null,[s("It corresponds to the "),n("a",C,[s("Content"),a(e)]),s(" API.")]),B,n("p",null,[s("Please beware that what it returns is promise of "),n("a",U,[s("readable stream"),a(e)]),s(". You can pipe the stream into a file, an HTTP response, etc.")]),F,n("p",null,[s("It corresponds to the "),n("a",E,[s("Validate push message objects"),a(e)]),s(" API.")]),q,n("p",null,[s("It corresponds to the "),n("a",W,[s("Validate reply message objects"),a(e)]),s(" API.")]),V,n("p",null,[s("It corresponds to the "),n("a",Y,[s("Validate multicast message objects"),a(e)]),s(" API.")]),H,n("p",null,[s("It corresponds to the "),n("a",K,[s("Validate narrowcast message objects"),a(e)]),s(" API.")]),Q,n("p",null,[s("It corresponds to the "),n("a",J,[s("Validate broadcast message objects"),a(e)]),s(" API.")]),X,n("p",null,[s("It corresponds to the "),n("a",Z,[s("Profile"),a(e)]),s(" API.")]),$,n("p",null,[s("It corresponds to the "),n("a",ss,[s("Group Summary"),a(e)]),s(" API.")]),ns,n("p",null,[s("It corresponds to the "),n("a",as,[s("Group Members Count"),a(e)]),s(" API.")]),es,n("p",null,[s("It corresponds to the "),n("a",ts,[s("Group Member Profile"),a(e)]),s(" API.")]),os,n("p",null,[s("It corresponds to the "),n("a",ps,[s("Group Member IDs"),a(e)]),s(" API.")]),is,n("p",null,[s("It corresponds to the "),n("a",rs,[s("Bot Followers IDs"),a(e)]),s(" API.")]),cs,n("p",null,[s("It corresponds to the "),n("a",ls,[s("Leave group"),a(e)]),s(" API.")]),us,n("p",null,[s("It corresponds to the "),n("a",ds,[s("Room Members Count"),a(e)]),s(" API.")]),ks,n("p",null,[s("It corresponds to the "),n("a",ms,[s("Room Member Profile"),a(e)]),s(" API.")]),gs,n("p",null,[s("It corresponds to the "),n("a",hs,[s("Room Member IDs"),a(e)]),s(" API.")]),bs,n("p",null,[s("It corresponds to the "),n("a",vs,[s("Leave room"),a(e)]),s(" API.")]),fs,n("p",null,[s("It corresponds to the "),n("a",_s,[s("Get rich menu"),a(e)]),s(" API.")]),n("p",null,[s("The argument is a rich menu ID. The return type is "),n("a",Is,[s("a rich menu response object"),a(e)]),s(".")]),Ms,n("p",null,[s("It corresponds to the "),n("a",Ps,[s("Create rich menu"),a(e)]),s(" API.")]),n("p",null,[s("The argument is "),n("a",ys,[s("a rich menu object"),a(e)]),s(". For the detail of the object format, please refer to the official documentation. It returns the result rich menu ID.")]),js,n("p",null,[s("It corresponds to the "),n("a",As,[s("Delete rich menu"),a(e)]),s(" API.")]),Rs,n("p",null,[s("It corresponds to the "),n("a",xs,[s("Get list of rich menu alias"),a(e)]),s(" API.")]),Ts,n("p",null,[s("It corresponds to the "),n("a",ws,[s("Get rich menu alias information"),a(e)]),s(" API.")]),Gs,n("p",null,[s("It corresponds to the "),n("a",Ds,[s("Create rich menu alias"),a(e)]),s(" API.")]),Os,n("p",null,[s("It corresponds to the "),n("a",Ns,[s("Delete rich menu alias"),a(e)]),s(" API.")]),zs,n("p",null,[s("It corresponds to the "),n("a",Ss,[s("Update rich menu alias"),a(e)]),s(" API.")]),Ls,n("p",null,[s("It corresponds to the "),n("a",Cs,[s("Get rich menu ID of user"),a(e)]),s(" API.")]),Bs,n("p",null,[s("It corresponds to the "),n("a",Us,[s("Link rich menu to user"),a(e)]),s(" API.")]),Fs,n("p",null,[s("It corresponds to the "),n("a",Es,[s("Unlink rich menu from user"),a(e)]),s(" API.")]),qs,n("p",null,[s("It corresponds to the "),n("a",Ws,[s("Download rich menu image"),a(e)]),s(" API.")]),Vs,n("p",null,[s("Please beware that what it returns is promise of "),n("a",Ys,[s("readable stream"),a(e)]),s(". You can pipe the stream into a file, an HTTP response, etc.")]),Hs,n("p",null,[s("It corresponds to the "),n("a",Ks,[s("Upload rich menu image"),a(e)]),s(" API.")]),Qs,n("p",null,[s("It corresponds to the "),n("a",Js,[s("Get rich menu list"),a(e)]),s(" API.")]),n("p",null,[s("The return type is a list of "),n("a",Xs,[s("rich menu response objects"),a(e)]),s(".")]),Zs,n("p",null,[s("It corresponds to the "),n("a",$s,[s("Set default rich menu"),a(e)]),s(" API.")]),sn,n("p",null,[s("It corresponds to the "),n("a",nn,[s("Get default rich menu ID"),a(e)]),s(" API.")]),an,n("p",null,[s("It corresponds to the "),n("a",en,[s("Cancel default rich menu"),a(e)]),s(" API.")]),tn,on,n("p",null,[s("Send an HTTP POST request to the "),pn,s(" endpoint, and "),n("a",rn,[s("issue a link token"),a(e)]),s(" for the user you are attempting to link.")]),cn,n("p",null,[s("Note: LINE@ accounts cannot call this API endpoint. Please migrate it to a LINE official account. For more information, see "),n("a",ln,[s("Migration of LINE@ accounts"),a(e)]),s(".")]),un,n("p",null,[s("It corresponds to the "),n("a",dn,[s("Get number of message deliveries"),a(e)]),s(" API.")]),kn,n("p",null,[s("It corresponds to the "),n("a",mn,[s("Get number of followers"),a(e)]),s(" API.")]),gn,n("p",null,[s("It corresponds to the "),n("a",hn,[s("Get friend demographics"),a(e)]),s(" API.")]),bn,n("p",null,[s("It corresponds to the "),n("a",vn,[s("Get user interaction statistics"),a(e)]),s(" API.")]),fn,n("p",null,[s("It corresponds to the "),n("a",_n,[s("Get statistics per unit"),a(e)]),s(" API.")]),In,Mn,n("p",null,[s("It corresponds to the "),n("a",Pn,[s("Get bot info"),a(e)]),s(" API.")]),yn,jn,n("p",null,[s("It corresponds to the "),n("a",An,[s("Set webhook endpoint URL"),a(e)]),s(" API.")]),Rn,n("p",null,[s("It corresponds to the "),n("a",xn,[s("Get webhook endpoint information"),a(e)]),s(" API.")]),Tn,n("p",null,[s("It corresponds to the "),n("a",wn,[s("Test webhook endpoint"),a(e)]),s(" API.")])])}const zn=r(u,[["render",Gn],["__file","client.html.vue"]]);export{zn as default};
