import{_ as l,r as s,o as r,c,a as e,d as n,w as d,b as t,e as o}from"./app-b6114fe5.js";const u={},h=e("h1",{id:"class-manageaudienceblobclient",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-manageaudienceblobclient","aria-hidden":"true"},"#"),t(" Class: ManageAudienceBlobClient")],-1),p=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),f=e("h3",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),g=e("h3",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),t(" Methods")],-1),_=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new ManageAudienceBlobClient</strong>(<code>config</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>config</code></td><td style="text-align:left;"><code>httpClientConfig</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),b={href:"https://github.com/line/line-bot-sdk-nodejs/blob/ddcb806/lib/manage-audience/api/manageAudienceBlobClient.ts#L37",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1","aria-hidden":"true"},"#"),t(" Methods")],-1),x=e("h3",{id:"adduseridstoaudience",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adduseridstoaudience","aria-hidden":"true"},"#"),t(" addUserIdsToAudience")],-1),y=e("strong",null,"addUserIdsToAudience",-1),A=e("code",null,"file",-1),C=e("code",null,"audienceGroupId?",-1),I=e("code",null,"uploadDescription?",-1),B=e("code",null,"Promise",-1),D=e("code",null,"MessageAPIResponseBase",-1),M=o('<p>Add user IDs or Identifiers for Advertisers (IFAs) to an audience for uploading user IDs (by file).</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>file</code></td><td style="text-align:left;"><code>Blob</code></td><td style="text-align:left;">A text file with one user ID or IFA entered per line. Specify text/plain as Content-Type. Max file number: 1 Max number: 1,500,000</td></tr><tr><td style="text-align:left;"><code>audienceGroupId?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The audience ID.</td></tr><tr><td style="text-align:left;"><code>uploadDescription?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The description to register with the job</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4>',4),T=e("code",null,"Promise",-1),k=e("code",null,"MessageAPIResponseBase",-1),U=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),P=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group-by-file"}," Documentation")],-1),N=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),R={href:"https://github.com/line/line-bot-sdk-nodejs/blob/ddcb806/lib/manage-audience/api/manageAudienceBlobClient.ts#L70",target:"_blank",rel:"noopener noreferrer"},v=e("hr",null,null,-1),F=e("h3",{id:"createaudienceforuploadinguserids",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createaudienceforuploadinguserids","aria-hidden":"true"},"#"),t(" createAudienceForUploadingUserIds")],-1),L=e("strong",null,"createAudienceForUploadingUserIds",-1),j=e("code",null,"file",-1),w=e("code",null,"description?",-1),E=e("code",null,"isIfaAudience?",-1),S=e("code",null,"uploadDescription?",-1),G=e("code",null,"Promise",-1),V=e("code",null,"CreateAudienceGroupResponse",-1),z=o('<p>Create audience for uploading user IDs (by file).</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>file</code></td><td style="text-align:left;"><code>Blob</code></td><td style="text-align:left;">A text file with one user ID or IFA entered per line. Specify text/plain as Content-Type. Max file number: 1 Max number: 1,500,000</td></tr><tr><td style="text-align:left;"><code>description?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The audience\\&amp;#39;s name. This is case-insensitive, meaning AUDIENCE and audience are considered identical. Max character limit: 120</td></tr><tr><td style="text-align:left;"><code>isIfaAudience?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">To specify recipients by IFAs: set `true`. To specify recipients by user IDs: set `false` or omit isIfaAudience property.</td></tr><tr><td style="text-align:left;"><code>uploadDescription?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The description to register for the job (in `jobs[].description`).</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4>',4),q=e("code",null,"Promise",-1),H=e("code",null,"CreateAudienceGroupResponse",-1),J=e("p",null,[e("strong",null,[e("code",null,"See")])],-1),K=e("p",null,[e("a",{href:"https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group-by-file"}," Documentation")],-1),O=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Q={href:"https://github.com/line/line-bot-sdk-nodejs/blob/ddcb806/lib/manage-audience/api/manageAudienceBlobClient.ts#L91",target:"_blank",rel:"noopener noreferrer"};function W(X,Y){const a=s("RouterLink"),i=s("ExternalLinkIcon");return r(),c("div",null,[e("p",null,[n(a,{to:"/apidocs/"},{default:d(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),n(a,{to:"/apidocs/modules.html"},{default:d(()=>[t("Exports")]),_:1}),t(" / "),n(a,{to:"/apidocs/modules/manageAudience.html"},{default:d(()=>[t("manageAudience")]),_:1}),t(" / ManageAudienceBlobClient")]),h,e("p",null,[n(a,{to:"/apidocs/modules/manageAudience.html"},{default:d(()=>[t("manageAudience")]),_:1}),t(".ManageAudienceBlobClient")]),p,f,e("ul",null,[e("li",null,[n(a,{to:"/apidocs/classes/manageAudience.ManageAudienceBlobClient.html#constructor"},{default:d(()=>[t("constructor")]),_:1})])]),g,e("ul",null,[e("li",null,[n(a,{to:"/apidocs/classes/manageAudience.ManageAudienceBlobClient.html#adduseridstoaudience"},{default:d(()=>[t("addUserIdsToAudience")]),_:1})]),e("li",null,[n(a,{to:"/apidocs/classes/manageAudience.ManageAudienceBlobClient.html#createaudienceforuploadinguserids"},{default:d(()=>[t("createAudienceForUploadingUserIds")]),_:1})])]),_,e("p",null,[e("a",b,[t("lib/manage-audience/api/manageAudienceBlobClient.ts:37"),n(i)])]),m,x,e("p",null,[t("▸ "),y,t("("),A,t(", "),C,t(", "),I,t("): "),B,t("<"),n(a,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:d(()=>[D]),_:1}),t(">")]),M,e("p",null,[T,t("<"),n(a,{to:"/apidocs/modules.html#messageapiresponsebase"},{default:d(()=>[k]),_:1}),t(">")]),U,P,N,e("p",null,[e("a",R,[t("lib/manage-audience/api/manageAudienceBlobClient.ts:70"),n(i)])]),v,F,e("p",null,[t("▸ "),L,t("("),j,t(", "),w,t(", "),E,t(", "),S,t("): "),G,t("<"),n(a,{to:"/apidocs/modules/manageAudience.html#createaudiencegroupresponse"},{default:d(()=>[V]),_:1}),t(">")]),z,e("p",null,[q,t("<"),n(a,{to:"/apidocs/modules/manageAudience.html#createaudiencegroupresponse"},{default:d(()=>[H]),_:1}),t(">")]),J,K,O,e("p",null,[e("a",Q,[t("lib/manage-audience/api/manageAudienceBlobClient.ts:91"),n(i)])])])}const $=l(u,[["render",W],["__file","manageAudience.ManageAudienceBlobClient.html.vue"]]);export{$ as default};
