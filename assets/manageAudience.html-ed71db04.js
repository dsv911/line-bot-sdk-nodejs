import{_ as s,r as o,o as u,c as r,a as e,d as n,w as d,b as t,e as i}from"./app-ee489c6c.js";const c={},h=i('<h1 id="namespace-manageaudience" tabindex="-1"><a class="header-anchor" href="#namespace-manageaudience" aria-hidden="true">#</a> Namespace: manageAudience</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="namespaces" tabindex="-1"><a class="header-anchor" href="#namespaces" aria-hidden="true">#</a> Namespaces</h3>',3),p=e("h3",{id:"classes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),t(" Classes")],-1),g=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),f=i('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="addaudiencetoaudiencegrouprequest" tabindex="-1"><a class="header-anchor" href="#addaudiencetoaudiencegrouprequest" aria-hidden="true">#</a> AddAudienceToAudienceGroupRequest</h3><p>Ƭ <strong>AddAudienceToAudienceGroupRequest</strong>: <code>Object</code></p><p>Add user IDs or Identifiers for Advertisers (IFAs) to an audience for uploading user IDs (by JSON)</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4>',5),_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),m=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The audience ID.")],-1),b=e("td",{style:{"text-align":"left"}},[e("code",null,"audiences?")],-1),y={style:{"text-align":"left"}},x=e("code",null,"Audience",-1),A=e("td",{style:{"text-align":"left"}},"An array of up to 10,000 user IDs or IFAs.",-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"uploadDescription?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name.")],-1),I=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),R={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/addAudienceToAudienceGroupRequest.ts#L18",target:"_blank",rel:"noopener noreferrer"},T=i('<hr><h3 id="audience" tabindex="-1"><a class="header-anchor" href="#audience" aria-hidden="true">#</a> Audience</h3><p>Ƭ <strong>Audience</strong>: <code>Object</code></p><p>Audience</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>id?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">A user ID or IFA. You can specify an empty array.</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',7),q={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audience.ts#L17",target:"_blank",rel:"noopener noreferrer"},D=e("hr",null,null,-1),k=e("h3",{id:"audiencegroup",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#audiencegroup","aria-hidden":"true"},"#"),t(" AudienceGroup")],-1),C=e("p",null,[t("Ƭ "),e("strong",null,"AudienceGroup"),t(": "),e("code",null,"Object")],-1),E=e("p",null,"Audience group",-1),L=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),N=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),j=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceCount?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The number of users included in the audience.")],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The audience ID.")],-1),v=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"clickUrl?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("The URL that was specified when the audience was created. This is only included when "),e("code",null,"audienceGroup.type"),t(" is CLICK and link URL is specified.")])],-1),O=e("td",{style:{"text-align":"left"}},[e("code",null,"createRoute?")],-1),P={style:{"text-align":"left"}},U=e("code",null,"AudienceGroupCreateRoute",-1),B=e("td",{style:{"text-align":"left"}},null,-1),J=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"created?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"When the audience was created (in UNIX time).")],-1),F=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name.")],-1),M=e("td",{style:{"text-align":"left"}},[e("code",null,"failedType?")],-1),S={style:{"text-align":"left"}},W=e("code",null,"AudienceGroupFailedType",-1),V=e("code",null,"null",-1),H=e("td",{style:{"text-align":"left"}},null,-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isIfaAudience?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs.")],-1),X=e("td",{style:{"text-align":"left"}},[e("code",null,"permission?")],-1),z={style:{"text-align":"left"}},Y=e("code",null,"AudienceGroupPermission",-1),Q=e("td",{style:{"text-align":"left"}},null,-1),Z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"requestId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},[t("The request ID that was specified when the audience was created. This is only included when "),e("code",null,"audienceGroup.type"),t(" is CLICK or IMP.")])],-1),$=e("td",{style:{"text-align":"left"}},[e("code",null,"status?")],-1),ee={style:{"text-align":"left"}},te=e("code",null,"AudienceGroupStatus",-1),ne=e("td",{style:{"text-align":"left"}},null,-1),le=e("td",{style:{"text-align":"left"}},[e("code",null,"type?")],-1),de={style:{"text-align":"left"}},ae=e("code",null,"AudienceGroupType",-1),ie=e("td",{style:{"text-align":"left"}},null,-1),oe=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),se={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroup.ts#L22",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroup.ts#L68",target:"_blank",rel:"noopener noreferrer"},re=i('<hr><h3 id="audiencegroupauthoritylevel" tabindex="-1"><a class="header-anchor" href="#audiencegroupauthoritylevel" aria-hidden="true">#</a> AudienceGroupAuthorityLevel</h3><p>Ƭ <strong>AudienceGroupAuthorityLevel</strong>: <code>&quot;PUBLIC&quot;</code> | <code>&quot;PRIVATE&quot;</code></p><p>authority level</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',5),ce={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupAuthorityLevel.ts#L17",target:"_blank",rel:"noopener noreferrer"},he=i('<hr><h3 id="audiencegroupcreateroute" tabindex="-1"><a class="header-anchor" href="#audiencegroupcreateroute" aria-hidden="true">#</a> AudienceGroupCreateRoute</h3><p>Ƭ <strong>AudienceGroupCreateRoute</strong>: <code>&quot;OA_MANAGER&quot;</code> | <code>&quot;MESSAGING_API&quot;</code> | <code>&quot;POINT_AD&quot;</code> | <code>&quot;AD_MANAGER&quot;</code></p>',3),pe=e("code",null,"OA_MANAGER",-1),ge={href:"https://manager.line.biz/",target:"_blank",rel:"noopener noreferrer"},fe=e("code",null,"MESSAGING_API",-1),_e=e("code",null,"POINT_AD",-1),me={href:"https://www.linebiz.com/jp/service/line-point-ad/",target:"_blank",rel:"noopener noreferrer"},be=e("code",null,"AD_MANAGER",-1),ye={href:"https://admanager.line.biz/",target:"_blank",rel:"noopener noreferrer"},xe=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ae={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupCreateRoute.ts#L17",target:"_blank",rel:"noopener noreferrer"},Ge=i('<hr><h3 id="audiencegroupfailedtype" tabindex="-1"><a class="header-anchor" href="#audiencegroupfailedtype" aria-hidden="true">#</a> AudienceGroupFailedType</h3><p>Ƭ <strong>AudienceGroupFailedType</strong>: <code>&quot;AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT&quot;</code> | <code>&quot;INTERNAL_ERROR&quot;</code> | <code>&quot;null&quot;</code></p><p>Failed type</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4>',5),Ie={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupFailedType.ts#L17",target:"_blank",rel:"noopener noreferrer"},Re=e("hr",null,null,-1),Te=e("h3",{id:"audiencegroupjob",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#audiencegroupjob","aria-hidden":"true"},"#"),t(" AudienceGroupJob")],-1),qe=e("p",null,[t("Ƭ "),e("strong",null,"AudienceGroupJob"),t(": "),e("code",null,"Object")],-1),De=e("p",null,"Audience group job",-1),ke=e("h4",{id:"type-declaration-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-3","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ce=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Ee=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceCount?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The number of accounts (recipients) that were added or removed.")],-1),Le=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"An audience ID.")],-1),Ne=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupJobId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"A job ID.")],-1),je=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"created?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"When the job was created (in UNIX time).")],-1),we=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The job's description.")],-1),ve=e("td",{style:{"text-align":"left"}},[e("code",null,"failedType?")],-1),Oe={style:{"text-align":"left"}},Pe=e("code",null,"AudienceGroupJobFailedType",-1),Ue=e("td",{style:{"text-align":"left"}},null,-1),Be=e("td",{style:{"text-align":"left"}},[e("code",null,"jobStatus?")],-1),Je={style:{"text-align":"left"}},Fe=e("code",null,"AudienceGroupJobStatus",-1),Me=e("td",{style:{"text-align":"left"}},null,-1),Se=e("td",{style:{"text-align":"left"}},[e("code",null,"type?")],-1),We={style:{"text-align":"left"}},Ve=e("code",null,"AudienceGroupJobType",-1),He=e("td",{style:{"text-align":"left"}},null,-1),Ke=e("h4",{id:"defined-in-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-6","aria-hidden":"true"},"#"),t(" Defined in")],-1),Xe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupJob.ts#L20",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupJob.ts#L52",target:"_blank",rel:"noopener noreferrer"},Ye=i('<hr><h3 id="audiencegroupjobfailedtype" tabindex="-1"><a class="header-anchor" href="#audiencegroupjobfailedtype" aria-hidden="true">#</a> AudienceGroupJobFailedType</h3><p>Ƭ <strong>AudienceGroupJobFailedType</strong>: <code>&quot;INTERNAL_ERROR&quot;</code> | <code>&quot;AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT&quot;</code></p><p>Failed type</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4>',5),Qe={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupJobFailedType.ts#L17",target:"_blank",rel:"noopener noreferrer"},Ze=i('<hr><h3 id="audiencegroupjobstatus" tabindex="-1"><a class="header-anchor" href="#audiencegroupjobstatus" aria-hidden="true">#</a> AudienceGroupJobStatus</h3><p>Ƭ <strong>AudienceGroupJobStatus</strong>: <code>&quot;QUEUED&quot;</code> | <code>&quot;WORKING&quot;</code> | <code>&quot;FINISHED&quot;</code> | <code>&quot;FAILED&quot;</code></p><p>Job status</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4>',5),$e={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupJobStatus.ts#L17",target:"_blank",rel:"noopener noreferrer"},et=e("hr",null,null,-1),tt=e("h3",{id:"audiencegroupjobtype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#audiencegroupjobtype","aria-hidden":"true"},"#"),t(" AudienceGroupJobType")],-1),nt=e("p",null,[t("Ƭ "),e("strong",null,"AudienceGroupJobType"),t(": "),e("code",null,'"DIFF_ADD"')],-1),lt=e("p",null,"Job Type",-1),dt=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),at={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupJobType.ts#L17",target:"_blank",rel:"noopener noreferrer"},it=i('<hr><h3 id="audiencegrouppermission" tabindex="-1"><a class="header-anchor" href="#audiencegrouppermission" aria-hidden="true">#</a> AudienceGroupPermission</h3><p>Ƭ <strong>AudienceGroupPermission</strong>: <code>&quot;READ&quot;</code> | <code>&quot;READ_WRITE&quot;</code></p><p>Permission</p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4>',5),ot={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupPermission.ts#L17",target:"_blank",rel:"noopener noreferrer"},st=i('<hr><h3 id="audiencegroupstatus" tabindex="-1"><a class="header-anchor" href="#audiencegroupstatus" aria-hidden="true">#</a> AudienceGroupStatus</h3><p>Ƭ <strong>AudienceGroupStatus</strong>: <code>&quot;IN_PROGRESS&quot;</code> | <code>&quot;READY&quot;</code> | <code>&quot;FAILED&quot;</code> | <code>&quot;EXPIRED&quot;</code> | <code>&quot;INACTIVE&quot;</code> | <code>&quot;ACTIVATING&quot;</code></p><p>Status</p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4>',5),ut={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupStatus.ts#L17",target:"_blank",rel:"noopener noreferrer"},rt=i('<hr><h3 id="audiencegrouptype" tabindex="-1"><a class="header-anchor" href="#audiencegrouptype" aria-hidden="true">#</a> AudienceGroupType</h3><p>Ƭ <strong>AudienceGroupType</strong>: <code>&quot;UPLOAD&quot;</code> | <code>&quot;CLICK&quot;</code> | <code>&quot;IMP&quot;</code> | <code>&quot;CHAT_TAG&quot;</code> | <code>&quot;FRIEND_PATH&quot;</code> | <code>&quot;RESERVATION&quot;</code> | <code>&quot;APP_EVENT&quot;</code> | <code>&quot;VIDEO_VIEW&quot;</code> | <code>&quot;WEBTRAFFIC&quot;</code> | <code>&quot;IMAGE_CLICK&quot;</code> | <code>&quot;RICHMENU_IMP&quot;</code> | <code>&quot;RICHMENU_CLICK&quot;</code></p><p>Audience group type</p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4>',5),ct={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/audienceGroupType.ts#L17",target:"_blank",rel:"noopener noreferrer"},ht=e("hr",null,null,-1),pt=e("h3",{id:"createaudiencegrouprequest",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createaudiencegrouprequest","aria-hidden":"true"},"#"),t(" CreateAudienceGroupRequest")],-1),gt=e("p",null,[t("Ƭ "),e("strong",null,"CreateAudienceGroupRequest"),t(": "),e("code",null,"Object")],-1),ft=e("p",null,"Create audience for uploading user IDs (by JSON)",-1),_t=e("h4",{id:"type-declaration-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-4","aria-hidden":"true"},"#"),t(" Type declaration")],-1),mt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),bt=e("td",{style:{"text-align":"left"}},[e("code",null,"audiences?")],-1),yt={style:{"text-align":"left"}},xt=e("code",null,"Audience",-1),At=e("td",{style:{"text-align":"left"}},"An array of user IDs or IFAs. Max number: 10,000",-1),Gt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name. This is case-insensitive, meaning AUDIENCE and audience are considered identical. Max character limit: 120")],-1),It=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isIfaAudience?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"To specify recipients by IFAs: set true. To specify recipients by user IDs: set false or omit isIfaAudience property.")],-1),Rt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"uploadDescription?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The description to register for the job (in jobs[].description).")],-1),Tt=e("h4",{id:"defined-in-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-13","aria-hidden":"true"},"#"),t(" Defined in")],-1),qt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createAudienceGroupRequest.ts#L18",target:"_blank",rel:"noopener noreferrer"},Dt=e("hr",null,null,-1),kt=e("h3",{id:"createaudiencegroupresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createaudiencegroupresponse","aria-hidden":"true"},"#"),t(" CreateAudienceGroupResponse")],-1),Ct=e("p",null,[t("Ƭ "),e("strong",null,"CreateAudienceGroupResponse"),t(": "),e("code",null,"Object")],-1),Et=e("p",null,"Create audience for uploading user IDs (by JSON)",-1),Lt=e("h4",{id:"type-declaration-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-5","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Nt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),jt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The audience ID.")],-1),wt=e("td",{style:{"text-align":"left"}},[e("code",null,"createRoute?")],-1),vt={style:{"text-align":"left"}},Ot=e("code",null,"CreateRouteEnum",-1),Pt=e("td",{style:{"text-align":"left"}},[t("How the audience was created. "),e("code",null,"MESSAGING_API"),t(": An audience created with Messaging API.")],-1),Ut=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"created?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"When the audience was created (in UNIX time).")],-1),Bt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name.")],-1),Jt=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expireTimestamp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Time of audience expiration. Only returned for specific audiences.")],-1),Ft=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isIfaAudience?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},[t("The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs. One of: "),e("code",null,"true"),t(": Accounts are specified with IFAs. "),e("code",null,"false"),t(" (default): Accounts are specified with user IDs.")])],-1),Mt=e("td",{style:{"text-align":"left"}},[e("code",null,"permission?")],-1),St={style:{"text-align":"left"}},Wt=e("code",null,"PermissionEnum",-1),Vt=e("td",{style:{"text-align":"left"}},[t("Audience's update permission. Audiences linked to the same channel will be READ_WRITE. "),e("code",null,"READ"),t(": Can use only. "),e("code",null,"READ_WRITE"),t(": Can use and update.")],-1),Ht=e("td",{style:{"text-align":"left"}},[e("code",null,"type?")],-1),Kt={style:{"text-align":"left"}},Xt=e("code",null,"AudienceGroupType",-1),zt=e("td",{style:{"text-align":"left"}},null,-1),Yt=e("h4",{id:"defined-in-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-14","aria-hidden":"true"},"#"),t(" Defined in")],-1),Qt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createAudienceGroupResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},Zt={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createAudienceGroupResponse.ts#L52",target:"_blank",rel:"noopener noreferrer"},$t=i('<hr><h3 id="createclickbasedaudiencegrouprequest" tabindex="-1"><a class="header-anchor" href="#createclickbasedaudiencegrouprequest" aria-hidden="true">#</a> CreateClickBasedAudienceGroupRequest</h3><p>Ƭ <strong>CreateClickBasedAudienceGroupRequest</strong>: <code>Object</code></p><p>Create audience for click-based retargeting</p><h4 id="type-declaration-6" tabindex="-1"><a class="header-anchor" href="#type-declaration-6" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>clickUrl?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The URL clicked by the user. If empty, users who clicked any URL in the message are added to the list of recipients. Max character limit: 2,000</td></tr><tr><td style="text-align:left;"><code>description?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The audience&#39;s name. This is case-insensitive, meaning AUDIENCE and audience are considered identical. Max character limit: 120</td></tr><tr><td style="text-align:left;"><code>requestId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The request ID of a broadcast or narrowcast message sent in the past 60 days. Each Messaging API request has a request ID.</td></tr></tbody></table><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4>',7),en={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createClickBasedAudienceGroupRequest.ts#L17",target:"_blank",rel:"noopener noreferrer"},tn=e("hr",null,null,-1),nn=e("h3",{id:"createclickbasedaudiencegroupresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createclickbasedaudiencegroupresponse","aria-hidden":"true"},"#"),t(" CreateClickBasedAudienceGroupResponse")],-1),ln=e("p",null,[t("Ƭ "),e("strong",null,"CreateClickBasedAudienceGroupResponse"),t(": "),e("code",null,"Object")],-1),dn=e("p",null,"Create audience for click-based retargeting",-1),an=e("h4",{id:"type-declaration-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-7","aria-hidden":"true"},"#"),t(" Type declaration")],-1),on=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),sn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The audience ID.")],-1),un=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"clickUrl?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The URL that was specified when the audience was created.")],-1),rn=e("td",{style:{"text-align":"left"}},[e("code",null,"createRoute?")],-1),cn={style:{"text-align":"left"}},hn=e("code",null,"CreateRouteEnum",-1),pn=e("td",{style:{"text-align":"left"}},[t("How the audience was created. "),e("code",null,"MESSAGING_API"),t(": An audience created with Messaging API.")],-1),gn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"created?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"When the audience was created (in UNIX time).")],-1),fn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name.")],-1),_n=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"expireTimestamp?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Time of audience expiration. Only returned for specific audiences.")],-1),mn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"isIfaAudience?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"The value indicating the type of account to be sent, as specified when creating the audience for uploading user IDs. One of: true: Accounts are specified with IFAs. false (default): Accounts are specified with user IDs.")],-1),bn=e("td",{style:{"text-align":"left"}},[e("code",null,"permission?")],-1),yn={style:{"text-align":"left"}},xn=e("code",null,"PermissionEnum",-1),An=e("td",{style:{"text-align":"left"}},[t("Audience's update permission. Audiences linked to the same channel will be READ_WRITE. - "),e("code",null,"READ"),t(": Can use only. - "),e("code",null,"READ_WRITE"),t(": Can use and update.")],-1),Gn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"requestId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The request ID that was specified when the audience was created.")],-1),In=e("td",{style:{"text-align":"left"}},[e("code",null,"type?")],-1),Rn={style:{"text-align":"left"}},Tn=e("code",null,"AudienceGroupType",-1),qn=e("td",{style:{"text-align":"left"}},null,-1),Dn=e("h4",{id:"defined-in-16",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-16","aria-hidden":"true"},"#"),t(" Defined in")],-1),kn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createClickBasedAudienceGroupResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createClickBasedAudienceGroupResponse.ts#L60",target:"_blank",rel:"noopener noreferrer"},En=i('<hr><h3 id="createimpbasedaudiencegrouprequest" tabindex="-1"><a class="header-anchor" href="#createimpbasedaudiencegrouprequest" aria-hidden="true">#</a> CreateImpBasedAudienceGroupRequest</h3><p>Ƭ <strong>CreateImpBasedAudienceGroupRequest</strong>: <code>Object</code></p><p>Create audience for impression-based retargeting</p><h4 id="type-declaration-8" tabindex="-1"><a class="header-anchor" href="#type-declaration-8" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>description?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The audience&#39;s name. This is case-insensitive, meaning <code>AUDIENCE</code> and <code>audience</code> are considered identical. Max character limit: 120</td></tr><tr><td style="text-align:left;"><code>requestId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The request ID of a broadcast or narrowcast message sent in the past 60 days. Each Messaging API request has a request ID.</td></tr></tbody></table><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4>',7),Ln={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createImpBasedAudienceGroupRequest.ts#L17",target:"_blank",rel:"noopener noreferrer"},Nn=e("hr",null,null,-1),jn=e("h3",{id:"createimpbasedaudiencegroupresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#createimpbasedaudiencegroupresponse","aria-hidden":"true"},"#"),t(" CreateImpBasedAudienceGroupResponse")],-1),wn=e("p",null,[t("Ƭ "),e("strong",null,"CreateImpBasedAudienceGroupResponse"),t(": "),e("code",null,"Object")],-1),vn=e("p",null,"Create audience for impression-based retargeting",-1),On=e("h4",{id:"type-declaration-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-9","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Pn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Un=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroupId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The audience ID.")],-1),Bn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"created?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"When the audience was created (in UNIX time).")],-1),Jn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"description?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The audience's name.")],-1),Fn=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"requestId?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"The request ID that was specified when the audience was created.")],-1),Mn=e("td",{style:{"text-align":"left"}},[e("code",null,"type?")],-1),Sn={style:{"text-align":"left"}},Wn=e("code",null,"AudienceGroupType",-1),Vn=e("td",{style:{"text-align":"left"}},null,-1),Hn=e("h4",{id:"defined-in-18",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-18","aria-hidden":"true"},"#"),t(" Defined in")],-1),Kn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createImpBasedAudienceGroupResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/createImpBasedAudienceGroupResponse.ts#L40",target:"_blank",rel:"noopener noreferrer"},zn=i('<hr><h3 id="errordetail" tabindex="-1"><a class="header-anchor" href="#errordetail" aria-hidden="true">#</a> ErrorDetail</h3><p>Ƭ <strong>ErrorDetail</strong>: <code>Object</code></p><p>LINE Messaging API This document describes LINE Messaging API.</p><p>The version of the OpenAPI document: 0.0.1</p><p>NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech). https://openapi-generator.tech Do not edit the class manually.</p><h4 id="type-declaration-10" tabindex="-1"><a class="header-anchor" href="#type-declaration-10" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Details of the error. Not included in the response under certain situations.</td></tr><tr><td style="text-align:left;"><code>property?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Location of where the error occurred. Returns the JSON field name or query parameter name of the request. Not included in the response under certain situations.</td></tr></tbody></table><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4>',9),Yn={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/errorDetail.ts#L14",target:"_blank",rel:"noopener noreferrer"},Qn=e("hr",null,null,-1),Zn=e("h3",{id:"errorresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#errorresponse","aria-hidden":"true"},"#"),t(" ErrorResponse")],-1),$n=e("p",null,[t("Ƭ "),e("strong",null,"ErrorResponse"),t(": "),e("code",null,"Object")],-1),el=e("h4",{id:"type-declaration-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-11","aria-hidden":"true"},"#"),t(" Type declaration")],-1),tl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),nl=e("td",{style:{"text-align":"left"}},[e("code",null,"details?")],-1),ll={style:{"text-align":"left"}},dl=e("code",null,"ErrorDetail",-1),al=e("td",{style:{"text-align":"left"}},"An array of error details. If the array is empty, this property will not be included in the response.",-1),il=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"message")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Message containing information about the error.")],-1),ol=e("h4",{id:"defined-in-20",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-20","aria-hidden":"true"},"#"),t(" Defined in")],-1),sl={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/errorResponse.ts#L15",target:"_blank",rel:"noopener noreferrer"},ul=e("hr",null,null,-1),rl=e("h3",{id:"getaudiencedataresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getaudiencedataresponse","aria-hidden":"true"},"#"),t(" GetAudienceDataResponse")],-1),cl=e("p",null,[t("Ƭ "),e("strong",null,"GetAudienceDataResponse"),t(": "),e("code",null,"Object")],-1),hl=e("p",null,"Get audience data",-1),pl=e("h4",{id:"type-declaration-12",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-12","aria-hidden":"true"},"#"),t(" Type declaration")],-1),gl=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),fl=e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroup?")],-1),_l={style:{"text-align":"left"}},ml=e("code",null,"AudienceGroup",-1),bl=e("td",{style:{"text-align":"left"}},null,-1),yl=e("td",{style:{"text-align":"left"}},[e("code",null,"jobs?")],-1),xl={style:{"text-align":"left"}},Al=e("code",null,"AudienceGroupJob",-1),Gl=e("td",{style:{"text-align":"left"}},"An array of jobs. This array is used to keep track of each attempt to add new user IDs or IFAs to an audience for uploading user IDs. Empty array is returned for any other type of audience. Max: 50",-1),Il=e("h4",{id:"defined-in-21",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-21","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rl={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/getAudienceDataResponse.ts#L19",target:"_blank",rel:"noopener noreferrer"},Tl=e("hr",null,null,-1),ql=e("h3",{id:"getaudiencegroupauthoritylevelresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getaudiencegroupauthoritylevelresponse","aria-hidden":"true"},"#"),t(" GetAudienceGroupAuthorityLevelResponse")],-1),Dl=e("p",null,[t("Ƭ "),e("strong",null,"GetAudienceGroupAuthorityLevelResponse"),t(": "),e("code",null,"Object")],-1),kl=e("p",null,"Get the authority level of the audience",-1),Cl=e("h4",{id:"type-declaration-13",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-13","aria-hidden":"true"},"#"),t(" Type declaration")],-1),El=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ll=e("td",{style:{"text-align":"left"}},[e("code",null,"authorityLevel?")],-1),Nl={style:{"text-align":"left"}},jl=e("code",null,"AudienceGroupAuthorityLevel",-1),wl=e("h4",{id:"defined-in-22",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-22","aria-hidden":"true"},"#"),t(" Defined in")],-1),vl={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/getAudienceGroupAuthorityLevelResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},Ol={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/getAudienceGroupAuthorityLevelResponse.ts#L24",target:"_blank",rel:"noopener noreferrer"},Pl=e("hr",null,null,-1),Ul=e("h3",{id:"getaudiencegroupsresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getaudiencegroupsresponse","aria-hidden":"true"},"#"),t(" GetAudienceGroupsResponse")],-1),Bl=e("p",null,[t("Ƭ "),e("strong",null,"GetAudienceGroupsResponse"),t(": "),e("code",null,"Object")],-1),Jl=e("p",null,"Gets data for more than one audience.",-1),Fl=e("h4",{id:"type-declaration-14",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-14","aria-hidden":"true"},"#"),t(" Type declaration")],-1),Ml=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),Sl=e("td",{style:{"text-align":"left"}},[e("code",null,"audienceGroups?")],-1),Wl={style:{"text-align":"left"}},Vl=e("code",null,"AudienceGroup",-1),Hl=e("td",{style:{"text-align":"left"}},"An array of audience data. If there are no audiences that match the specified filter, an empty array will be returned.",-1),Kl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"hasNextPage?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"boolean")]),e("td",{style:{"text-align":"left"}},"true when this is not the last page.")],-1),Xl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"page?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The current page number.")],-1),zl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"readWriteAudienceGroupTotalCount?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"Of the audiences you can get with the specified filter, the number of audiences with the update permission set to READ_WRITE.")],-1),Yl=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"size?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The maximum number of audiences on the current page.")],-1),Ql=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"totalCount?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"number")]),e("td",{style:{"text-align":"left"}},"The total number of audiences that can be returned with the specified filter.")],-1),Zl=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),$l={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/getAudienceGroupsResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},ed=e("hr",null,null,-1),td=e("h3",{id:"updateaudiencegroupauthoritylevelrequest",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#updateaudiencegroupauthoritylevelrequest","aria-hidden":"true"},"#"),t(" UpdateAudienceGroupAuthorityLevelRequest")],-1),nd=e("p",null,[t("Ƭ "),e("strong",null,"UpdateAudienceGroupAuthorityLevelRequest"),t(": "),e("code",null,"Object")],-1),ld=e("p",null,"Change the authority level of the audience",-1),dd=e("h4",{id:"type-declaration-15",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-15","aria-hidden":"true"},"#"),t(" Type declaration")],-1),ad=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),id=e("td",{style:{"text-align":"left"}},[e("code",null,"authorityLevel?")],-1),od={style:{"text-align":"left"}},sd=e("code",null,"AudienceGroupAuthorityLevel",-1),ud=e("h4",{id:"defined-in-24",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-24","aria-hidden":"true"},"#"),t(" Defined in")],-1),rd={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/updateAudienceGroupAuthorityLevelRequest.ts#L18",target:"_blank",rel:"noopener noreferrer"},cd={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/updateAudienceGroupAuthorityLevelRequest.ts#L24",target:"_blank",rel:"noopener noreferrer"},hd=i('<hr><h3 id="updateaudiencegroupdescriptionrequest" tabindex="-1"><a class="header-anchor" href="#updateaudiencegroupdescriptionrequest" aria-hidden="true">#</a> UpdateAudienceGroupDescriptionRequest</h3><p>Ƭ <strong>UpdateAudienceGroupDescriptionRequest</strong>: <code>Object</code></p><p>Rename an audience</p><h4 id="type-declaration-16" tabindex="-1"><a class="header-anchor" href="#type-declaration-16" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>description?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">The audience&#39;s name. This is case-insensitive, meaning AUDIENCE and audience are considered identical. Max character limit: 120</td></tr></tbody></table><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4>',7),pd={href:"https://github.com/line/line-bot-sdk-nodejs/blob/34f7779/lib/manage-audience/model/updateAudienceGroupDescriptionRequest.ts#L17",target:"_blank",rel:"noopener noreferrer"};function gd(fd,_d){const l=o("RouterLink"),a=o("ExternalLinkIcon");return u(),r("div",null,[e("p",null,[n(l,{to:"/apidocs/"},{default:d(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),n(l,{to:"/apidocs/modules.html"},{default:d(()=>[t("Exports")]),_:1}),t(" / manageAudience")]),h,e("ul",null,[e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.AudienceGroup.html"},{default:d(()=>[t("AudienceGroup")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.AudienceGroupJob.html"},{default:d(()=>[t("AudienceGroupJob")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.CreateAudienceGroupResponse.html"},{default:d(()=>[t("CreateAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.CreateClickBasedAudienceGroupResponse.html"},{default:d(()=>[t("CreateClickBasedAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.CreateImpBasedAudienceGroupResponse.html"},{default:d(()=>[t("CreateImpBasedAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.GetAudienceGroupAuthorityLevelResponse.html"},{default:d(()=>[t("GetAudienceGroupAuthorityLevelResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.UpdateAudienceGroupAuthorityLevelRequest.html"},{default:d(()=>[t("UpdateAudienceGroupAuthorityLevelRequest")]),_:1})])]),p,e("ul",null,[e("li",null,[n(l,{to:"/apidocs/classes/manageAudience.ManageAudienceBlobClient.html"},{default:d(()=>[t("ManageAudienceBlobClient")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/classes/manageAudience.ManageAudienceClient.html"},{default:d(()=>[t("ManageAudienceClient")]),_:1})])]),g,e("ul",null,[e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#addaudiencetoaudiencegrouprequest"},{default:d(()=>[t("AddAudienceToAudienceGroupRequest")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audience"},{default:d(()=>[t("Audience")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroup"},{default:d(()=>[t("AudienceGroup")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupauthoritylevel"},{default:d(()=>[t("AudienceGroupAuthorityLevel")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupcreateroute"},{default:d(()=>[t("AudienceGroupCreateRoute")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupfailedtype"},{default:d(()=>[t("AudienceGroupFailedType")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjob"},{default:d(()=>[t("AudienceGroupJob")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobfailedtype"},{default:d(()=>[t("AudienceGroupJobFailedType")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobstatus"},{default:d(()=>[t("AudienceGroupJobStatus")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobtype"},{default:d(()=>[t("AudienceGroupJobType")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouppermission"},{default:d(()=>[t("AudienceGroupPermission")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupstatus"},{default:d(()=>[t("AudienceGroupStatus")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouptype"},{default:d(()=>[t("AudienceGroupType")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createaudiencegrouprequest"},{default:d(()=>[t("CreateAudienceGroupRequest")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createaudiencegroupresponse"},{default:d(()=>[t("CreateAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createclickbasedaudiencegrouprequest"},{default:d(()=>[t("CreateClickBasedAudienceGroupRequest")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createclickbasedaudiencegroupresponse"},{default:d(()=>[t("CreateClickBasedAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createimpbasedaudiencegrouprequest"},{default:d(()=>[t("CreateImpBasedAudienceGroupRequest")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#createimpbasedaudiencegroupresponse"},{default:d(()=>[t("CreateImpBasedAudienceGroupResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#errordetail"},{default:d(()=>[t("ErrorDetail")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#errorresponse"},{default:d(()=>[t("ErrorResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#getaudiencedataresponse"},{default:d(()=>[t("GetAudienceDataResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#getaudiencegroupauthoritylevelresponse"},{default:d(()=>[t("GetAudienceGroupAuthorityLevelResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#getaudiencegroupsresponse"},{default:d(()=>[t("GetAudienceGroupsResponse")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#updateaudiencegroupauthoritylevelrequest"},{default:d(()=>[t("UpdateAudienceGroupAuthorityLevelRequest")]),_:1})]),e("li",null,[n(l,{to:"/apidocs/modules/manageAudience.html#updateaudiencegroupdescriptionrequest"},{default:d(()=>[t("UpdateAudienceGroupDescriptionRequest")]),_:1})])]),f,e("table",null,[_,e("tbody",null,[m,e("tr",null,[b,e("td",y,[n(l,{to:"/apidocs/modules/manageAudience.html#audience"},{default:d(()=>[x]),_:1}),t("[]")]),A]),G])]),I,e("p",null,[e("a",R,[t("lib/manage-audience/model/addAudienceToAudienceGroupRequest.ts:18"),n(a)])]),T,e("p",null,[e("a",q,[t("lib/manage-audience/model/audience.ts:17"),n(a)])]),D,k,C,E,L,e("table",null,[N,e("tbody",null,[j,w,v,e("tr",null,[O,e("td",P,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupcreateroute"},{default:d(()=>[U]),_:1})]),B]),J,F,e("tr",null,[M,e("td",S,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupfailedtype"},{default:d(()=>[W]),_:1}),t(" | "),V]),H]),K,e("tr",null,[X,e("td",z,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouppermission"},{default:d(()=>[Y]),_:1})]),Q]),Z,e("tr",null,[$,e("td",ee,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupstatus"},{default:d(()=>[te]),_:1})]),ne]),e("tr",null,[le,e("td",de,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouptype"},{default:d(()=>[ae]),_:1})]),ie])])]),oe,e("p",null,[e("a",se,[t("lib/manage-audience/model/audienceGroup.ts:22"),n(a)])]),e("p",null,[e("a",ue,[t("lib/manage-audience/model/audienceGroup.ts:68"),n(a)])]),re,e("p",null,[e("a",ce,[t("lib/manage-audience/model/audienceGroupAuthorityLevel.ts:17"),n(a)])]),he,e("p",null,[t("How the audience was created. One of: - "),pe,t(": Audience created with "),e("a",ge,[t("LINE Official Account Manager"),n(a)]),t(". - "),fe,t(": Audience created with Messaging API. - "),_e,t(": Audience created with "),e("a",me,[t("LINE Points Ads"),n(a)]),t(" (Japanese only). - "),be,t(": Audience created with "),e("a",ye,[t("LINE Ads"),n(a)]),t(".")]),xe,e("p",null,[e("a",Ae,[t("lib/manage-audience/model/audienceGroupCreateRoute.ts:17"),n(a)])]),Ge,e("p",null,[e("a",Ie,[t("lib/manage-audience/model/audienceGroupFailedType.ts:17"),n(a)])]),Re,Te,qe,De,ke,e("table",null,[Ce,e("tbody",null,[Ee,Le,Ne,je,we,e("tr",null,[ve,e("td",Oe,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobfailedtype"},{default:d(()=>[Pe]),_:1})]),Ue]),e("tr",null,[Be,e("td",Je,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobstatus"},{default:d(()=>[Fe]),_:1})]),Me]),e("tr",null,[Se,e("td",We,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjobtype"},{default:d(()=>[Ve]),_:1})]),He])])]),Ke,e("p",null,[e("a",Xe,[t("lib/manage-audience/model/audienceGroupJob.ts:20"),n(a)])]),e("p",null,[e("a",ze,[t("lib/manage-audience/model/audienceGroupJob.ts:52"),n(a)])]),Ye,e("p",null,[e("a",Qe,[t("lib/manage-audience/model/audienceGroupJobFailedType.ts:17"),n(a)])]),Ze,e("p",null,[e("a",$e,[t("lib/manage-audience/model/audienceGroupJobStatus.ts:17"),n(a)])]),et,tt,nt,lt,dt,e("p",null,[e("a",at,[t("lib/manage-audience/model/audienceGroupJobType.ts:17"),n(a)])]),it,e("p",null,[e("a",ot,[t("lib/manage-audience/model/audienceGroupPermission.ts:17"),n(a)])]),st,e("p",null,[e("a",ut,[t("lib/manage-audience/model/audienceGroupStatus.ts:17"),n(a)])]),rt,e("p",null,[e("a",ct,[t("lib/manage-audience/model/audienceGroupType.ts:17"),n(a)])]),ht,pt,gt,ft,_t,e("table",null,[mt,e("tbody",null,[e("tr",null,[bt,e("td",yt,[n(l,{to:"/apidocs/modules/manageAudience.html#audience"},{default:d(()=>[xt]),_:1}),t("[]")]),At]),Gt,It,Rt])]),Tt,e("p",null,[e("a",qt,[t("lib/manage-audience/model/createAudienceGroupRequest.ts:18"),n(a)])]),Dt,kt,Ct,Et,Lt,e("table",null,[Nt,e("tbody",null,[jt,e("tr",null,[wt,e("td",vt,[n(l,{to:"/apidocs/modules/manageAudience.CreateAudienceGroupResponse.html#createrouteenum"},{default:d(()=>[Ot]),_:1})]),Pt]),Ut,Bt,Jt,Ft,e("tr",null,[Mt,e("td",St,[n(l,{to:"/apidocs/modules/manageAudience.CreateAudienceGroupResponse.html#permissionenum"},{default:d(()=>[Wt]),_:1})]),Vt]),e("tr",null,[Ht,e("td",Kt,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouptype"},{default:d(()=>[Xt]),_:1})]),zt])])]),Yt,e("p",null,[e("a",Qt,[t("lib/manage-audience/model/createAudienceGroupResponse.ts:18"),n(a)])]),e("p",null,[e("a",Zt,[t("lib/manage-audience/model/createAudienceGroupResponse.ts:52"),n(a)])]),$t,e("p",null,[e("a",en,[t("lib/manage-audience/model/createClickBasedAudienceGroupRequest.ts:17"),n(a)])]),tn,nn,ln,dn,an,e("table",null,[on,e("tbody",null,[sn,un,e("tr",null,[rn,e("td",cn,[n(l,{to:"/apidocs/modules/manageAudience.CreateClickBasedAudienceGroupResponse.html#createrouteenum"},{default:d(()=>[hn]),_:1})]),pn]),gn,fn,_n,mn,e("tr",null,[bn,e("td",yn,[n(l,{to:"/apidocs/modules/manageAudience.CreateClickBasedAudienceGroupResponse.html#permissionenum"},{default:d(()=>[xn]),_:1})]),An]),Gn,e("tr",null,[In,e("td",Rn,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouptype"},{default:d(()=>[Tn]),_:1})]),qn])])]),Dn,e("p",null,[e("a",kn,[t("lib/manage-audience/model/createClickBasedAudienceGroupResponse.ts:18"),n(a)])]),e("p",null,[e("a",Cn,[t("lib/manage-audience/model/createClickBasedAudienceGroupResponse.ts:60"),n(a)])]),En,e("p",null,[e("a",Ln,[t("lib/manage-audience/model/createImpBasedAudienceGroupRequest.ts:17"),n(a)])]),Nn,jn,wn,vn,On,e("table",null,[Pn,e("tbody",null,[Un,Bn,Jn,Fn,e("tr",null,[Mn,e("td",Sn,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegrouptype"},{default:d(()=>[Wn]),_:1})]),Vn])])]),Hn,e("p",null,[e("a",Kn,[t("lib/manage-audience/model/createImpBasedAudienceGroupResponse.ts:18"),n(a)])]),e("p",null,[e("a",Xn,[t("lib/manage-audience/model/createImpBasedAudienceGroupResponse.ts:40"),n(a)])]),zn,e("p",null,[e("a",Yn,[t("lib/manage-audience/model/errorDetail.ts:14"),n(a)])]),Qn,Zn,$n,el,e("table",null,[tl,e("tbody",null,[e("tr",null,[nl,e("td",ll,[n(l,{to:"/apidocs/modules/manageAudience.html#errordetail"},{default:d(()=>[dl]),_:1}),t("[]")]),al]),il])]),ol,e("p",null,[e("a",sl,[t("lib/manage-audience/model/errorResponse.ts:15"),n(a)])]),ul,rl,cl,hl,pl,e("table",null,[gl,e("tbody",null,[e("tr",null,[fl,e("td",_l,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroup"},{default:d(()=>[ml]),_:1})]),bl]),e("tr",null,[yl,e("td",xl,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupjob"},{default:d(()=>[Al]),_:1}),t("[]")]),Gl])])]),Il,e("p",null,[e("a",Rl,[t("lib/manage-audience/model/getAudienceDataResponse.ts:19"),n(a)])]),Tl,ql,Dl,kl,Cl,e("table",null,[El,e("tbody",null,[e("tr",null,[Ll,e("td",Nl,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupauthoritylevel"},{default:d(()=>[jl]),_:1})])])])]),wl,e("p",null,[e("a",vl,[t("lib/manage-audience/model/getAudienceGroupAuthorityLevelResponse.ts:18"),n(a)])]),e("p",null,[e("a",Ol,[t("lib/manage-audience/model/getAudienceGroupAuthorityLevelResponse.ts:24"),n(a)])]),Pl,Ul,Bl,Jl,Fl,e("table",null,[Ml,e("tbody",null,[e("tr",null,[Sl,e("td",Wl,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroup"},{default:d(()=>[Vl]),_:1}),t("[]")]),Hl]),Kl,Xl,zl,Yl,Ql])]),Zl,e("p",null,[e("a",$l,[t("lib/manage-audience/model/getAudienceGroupsResponse.ts:18"),n(a)])]),ed,td,nd,ld,dd,e("table",null,[ad,e("tbody",null,[e("tr",null,[id,e("td",od,[n(l,{to:"/apidocs/modules/manageAudience.html#audiencegroupauthoritylevel"},{default:d(()=>[sd]),_:1})])])])]),ud,e("p",null,[e("a",rd,[t("lib/manage-audience/model/updateAudienceGroupAuthorityLevelRequest.ts:18"),n(a)])]),e("p",null,[e("a",cd,[t("lib/manage-audience/model/updateAudienceGroupAuthorityLevelRequest.ts:24"),n(a)])]),hd,e("p",null,[e("a",pd,[t("lib/manage-audience/model/updateAudienceGroupDescriptionRequest.ts:17"),n(a)])])])}const bd=s(c,[["render",gd],["__file","manageAudience.html.vue"]]);export{bd as default};
