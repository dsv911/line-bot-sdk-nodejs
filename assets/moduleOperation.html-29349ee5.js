import{_ as s,r as i,o as r,c as h,a as e,d as l,w as a,b as t,e as n}from"./app-17537ee0.js";const c={},u=n('<h1 id="namespace-moduleoperation" tabindex="-1"><a class="header-anchor" href="#namespace-moduleoperation" aria-hidden="true">#</a> Namespace: moduleOperation</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of contents</h2><h3 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h3>',3),f=e("h3",{id:"type-aliases",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),t(" Type Aliases")],-1),p=n('<h2 id="type-aliases-1" tabindex="-1"><a class="header-anchor" href="#type-aliases-1" aria-hidden="true">#</a> Type Aliases</h2><h3 id="acquirechatcontrolrequest" tabindex="-1"><a class="header-anchor" href="#acquirechatcontrolrequest" aria-hidden="true">#</a> AcquireChatControlRequest</h3><p>頭 <strong>AcquireChatControlRequest</strong>: <code>Object</code></p><p>Request entity of the Acquire Control API</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>expired?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>True</code>: After the time limit (ttl) has passed, the initiative (Chat Control) will return to the Primary Channel. (Default) <code>False</code>: There&#39;s no time limit and the initiative (Chat Control) doesn&#39;t change over time.</td></tr><tr><td style="text-align:left;"><code>ttl?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">The time it takes for initiative (Chat Control) to return to the Primary Channel (the time that the module channel stays on the Active Channel). The value is specified in seconds. The maximum value is one year (3600 * 24 * 365). The default value is 3600 (1 hour). * Ignored if the value of expired is false.</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',7),m={href:"https://github.com/line/line-bot-sdk-nodejs/blob/975aaa5/lib/module/model/acquireChatControlRequest.ts#L17",target:"_blank",rel:"noopener noreferrer"},b=n('<hr><h3 id="detachmodulerequest" tabindex="-1"><a class="header-anchor" href="#detachmodulerequest" aria-hidden="true">#</a> DetachModuleRequest</h3><p>頭 <strong>DetachModuleRequest</strong>: <code>Object</code></p><p>Unlink (detach) the module channel by the operation of the module channel administrator</p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>botId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">User ID of the LINE Official Account bot attached to the module channel.</td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',7),y={href:"https://github.com/line/line-bot-sdk-nodejs/blob/975aaa5/lib/module/model/detachModuleRequest.ts#L17",target:"_blank",rel:"noopener noreferrer"},g=e("hr",null,null,-1),x=e("h3",{id:"getmodulesresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getmodulesresponse","aria-hidden":"true"},"#"),t(" GetModulesResponse")],-1),_=e("p",null,[t("頭 "),e("strong",null,"GetModulesResponse"),t(": "),e("code",null,"Object")],-1),q=e("p",null,"List of bots to which the module is attached",-1),C=e("h4",{id:"type-declaration-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration-2","aria-hidden":"true"},"#"),t(" Type declaration")],-1),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Description")])],-1),T=e("td",{style:{"text-align":"left"}},[e("code",null,"bots")],-1),k={style:{"text-align":"left"}},D=e("code",null,"ModuleBot",-1),I=e("td",{style:{"text-align":"left"}},"Array of Bot list Item objects representing basic information about the bot.",-1),M=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"next?")]),e("td",{style:{"text-align":"left"}},[e("code",null,"string")]),e("td",{style:{"text-align":"left"}},"Continuation token. Used to get the next array of basic bot information. This property is only returned if there are more unreturned results.")],-1),O=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),B={href:"https://github.com/line/line-bot-sdk-nodejs/blob/975aaa5/lib/module/model/getModulesResponse.ts#L18",target:"_blank",rel:"noopener noreferrer"},L=n('<hr><h3 id="modulebot" tabindex="-1"><a class="header-anchor" href="#modulebot" aria-hidden="true">#</a> ModuleBot</h3><p>頭 <strong>ModuleBot</strong>: <code>Object</code></p><p>basic information about the bot.</p><h4 id="type-declaration-3" tabindex="-1"><a class="header-anchor" href="#type-declaration-3" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>basicId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bot&#39;s basic ID</td></tr><tr><td style="text-align:left;"><code>displayName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bot&#39;s display name</td></tr><tr><td style="text-align:left;"><code>pictureUrl?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Profile image URL. Image URL starting with <code>https://</code>. Not included in the response if the bot doesn&#39;t have a profile image.</td></tr><tr><td style="text-align:left;"><code>premiumId?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bot&#39;s premium ID. Not included in the response if the premium ID isn&#39;t set.</td></tr><tr><td style="text-align:left;"><code>userId</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Bot&#39;s user ID</td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4>',7),v={href:"https://github.com/line/line-bot-sdk-nodejs/blob/975aaa5/lib/module/model/moduleBot.ts#L17",target:"_blank",rel:"noopener noreferrer"};function N(A,j){const o=i("RouterLink"),d=i("ExternalLinkIcon");return r(),h("div",null,[e("p",null,[l(o,{to:"/apidocs/"},{default:a(()=>[t("@line/bot-sdk")]),_:1}),t(" / "),l(o,{to:"/apidocs/modules.html"},{default:a(()=>[t("Exports")]),_:1}),t(" / moduleOperation")]),u,e("ul",null,[e("li",null,[l(o,{to:"/apidocs/classes/moduleOperation.LineModuleClient.html"},{default:a(()=>[t("LineModuleClient")]),_:1})])]),f,e("ul",null,[e("li",null,[l(o,{to:"/apidocs/modules/moduleOperation.html#acquirechatcontrolrequest"},{default:a(()=>[t("AcquireChatControlRequest")]),_:1})]),e("li",null,[l(o,{to:"/apidocs/modules/moduleOperation.html#detachmodulerequest"},{default:a(()=>[t("DetachModuleRequest")]),_:1})]),e("li",null,[l(o,{to:"/apidocs/modules/moduleOperation.html#getmodulesresponse"},{default:a(()=>[t("GetModulesResponse")]),_:1})]),e("li",null,[l(o,{to:"/apidocs/modules/moduleOperation.html#modulebot"},{default:a(()=>[t("ModuleBot")]),_:1})])]),p,e("p",null,[e("a",m,[t("lib/module/model/acquireChatControlRequest.ts:17"),l(d)])]),b,e("p",null,[e("a",y,[t("lib/module/model/detachModuleRequest.ts:17"),l(d)])]),g,x,_,q,C,e("table",null,[R,e("tbody",null,[e("tr",null,[T,e("td",k,[l(o,{to:"/apidocs/modules/moduleOperation.html#modulebot"},{default:a(()=>[D]),_:1}),t("[]")]),I]),M])]),O,e("p",null,[e("a",B,[t("lib/module/model/getModulesResponse.ts:18"),l(d)])]),L,e("p",null,[e("a",v,[t("lib/module/model/moduleBot.ts:17"),l(d)])])])}const w=s(c,[["render",N],["__file","moduleOperation.html.vue"]]);export{w as default};
